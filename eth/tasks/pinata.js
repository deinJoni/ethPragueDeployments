const axios = require('axios');

const data = JSON.stringify({
      "pinataContent": {
        "image":"",
        "name": "EthPrague",
        "requirements": {}
    }
  });

var config = {
  method: 'post',
  url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',
  headers: { 
    'pinata_api_key': '9807e4444c8b18fac587',
    'pinata_secret_api_key': 'fcc42dccdf872e2cad73c610fd456fcba50069ef682877fb6c9d383d927e11ff',
    'Content-Type': 'application/json',
  },
  data
};

axios(config).then((res) => {
   console.log(res.data);
});