{"id":"01e44cf1e987014c641282ce9e80f2f3","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/PeerLocal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract PeerLocal is Ownable {\n\n    bytes32 MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER = \"I am the owner of this community\";\n\n    struct Community {\n        string ipfsMetadata;\n        uint256 stakingRequirement;\n        address owner;\n    }\n\n    struct Offer {\n        address owner;\n        uint256 communityId;\n        string metadata;\n        uint256 reputationRequirement;\n        uint256 stakingRequirement;\n        string offerStatus;\n    }\n\n    event CommunityCreated(uint256 indexed communityId, string ipfsMetadata, uint256 stakingRequirement, address indexed owner);\n    event MemberJoinedCommunity(uint256 indexed communityId, address indexed member);\n    event OfferCreated(uint256 indexed communityId, uint256 offerId, Offer newOffer);\n    event OfferAccepted(uint256 indexed communityId, uint256 indexed offerId, address indexed member);\n    event PeerLocalInitalized(address indexed erc20);\n\n\n\n    IERC20 public token; // GHO\n    mapping(uint256 => Community) public communities;\n    uint256 communityCounter = 0;\n    uint256 offerCounter = 0;\n    // communityId => offerId => Offer\n    mapping(uint256 => mapping(uint256 => Offer)) public offers;\n\n    mapping(uint256 => address[]) public communityMembers;\n    mapping(address => uint256) public reputation;\n\n    mapping(uint256 => string) public offerStatus;\n\n\n    constructor(IERC20 _token) {\n        token = _token;\n        emit PeerLocalInitalized(address(_token));\n    }\n\n    function createCommunity(string memory ipfsMetadata, uint256 stakingRequirement) public {\n        communities[communityCounter] = Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender});\n        communityCounter++;\n        emit CommunityCreated(communityCounter - 1, ipfsMetadata, stakingRequirement, msg.sender);\n    }\n\n    function joinCommunity(uint256 communityId, bytes memory signature) public {\n        // signature has to be from the owner of the community\n        require(_recoverSigner(signature) == communities[communityId].owner, \"Invalid signature\");\n        require(token.balanceOf(msg.sender) >= communities[communityId].stakingRequirement, \"Insufficient balance to join community\");\n        // transfer from msg.sender to this contract\n        token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement);\n        // add msg.sender to communityMembers\n        communityMembers[communityId].push(msg.sender);\n        // emit event\n        emit MemberJoinedCommunity(communityId, msg.sender);\n    }\n\n    function createOffer(uint256 communityId, string memory metadata, uint256 reputationRequirement, uint256 stakingRequirement) public {\n        require(reputation[msg.sender] >= reputationRequirement, \"Insufficient reputation to create offer\");\n        \n        //We add one to the offerCounter\n        offerCounter += 1;\n\n        Offer memory newOffer = Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \"created\");\n\n        offers[communityId][offerCounter] = newOffer;\n        // set the status of the offer to 1, created, not accept\n        emit OfferCreated(communityId, offerCounter, newOffer);\n    }\n\n    function acceptOffer(uint256 communityId, uint256 offerId) public {\n        require(token.balanceOf(msg.sender) >= offers[communityId][offerId].stakingRequirement, \"Insufficient balance to accept offer\");\n        require(reputation[msg.sender] >= offers[communityId][offerId].reputationRequirement, \"Insufficient reputation to accept offer\"); \n        // Transfer staked tokens\n        token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement);\n        // Transfer staked tokens to offer owner\n        token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement);\n        // emit event\n        emit OfferAccepted(communityId, offerId, msg.sender);\n    }\n\n    function _recoverSigner(\n        bytes memory signature\n    ) private view returns (address) {\n        return ECDSA.recover(ECDSA.toEthSignedMessageHash(MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER), signature);\n    }\n\n    //function endOffer(uint256 communityId, uint256 offerId) public {}\n}\n"},"contracts/ReputationToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ReputationToken is ERC20 {\n    constructor() ERC20(\"ReputationToken\", \"RPT\") {\n        _mint(msg.sender, 1000000 * 10**decimals());\n    }\n}\n"},"contracts/TestErc20Token.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestERC20 is ERC20 {\n    constructor() ERC20(\"TestErc20\", \"TERC20\") {\n        _mint(msg.sender, 1000000 * 10**decimals());\n    }\n\n    function mint(address to, uint256 amount) public {\n        _mint(to, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"6","start":6374,"end":6398},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/PeerLocal.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":3959,"end":4058},"type":"Warning"}],"version":"0.8.10","long_version":"0.8.10+commit.fc410830.Darwin.appleclang","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[824],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":825,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,824],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":825,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"1419:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1419:7:1"},{"baseName":{"id":121,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1428:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1428:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1436:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1436:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1170:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,824],"name":"ERC20","nameLocation":"1410:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1457:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1509:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":132,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1583:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1633:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1618:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1644:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2032:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2042:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2050:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2042:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2065:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2075:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2065:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1673:298:1","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2002:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1988:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2009:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2032:0:1"},"scope":699,"src":"1976:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2223:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2240:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2233:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2095:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2167:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2208:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:1"},"scope":699,"src":"2154:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2436:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2453:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2446:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2258:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2380:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2421:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:1"},"scope":699,"src":"2365:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3156:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3166:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2473:613:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3108:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3149:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:1"},"scope":699,"src":"3091:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3312:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3329:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3322:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3188:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3262:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3303:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:1"},"scope":699,"src":"3242:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3489:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3506:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3516:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3499:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3354:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3433:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3425:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3480:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:1"},"scope":699,"src":"3406:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3812:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3838:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3870:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3877:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3881:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3860:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3860:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3898:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3537:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3753:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3745:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3765:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3757:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3806:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:1"},"scope":699,"src":"3727:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4072:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4089:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4101:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4108:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4082:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3922:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4001:5:1","nodeType":"VariableDeclaration","scope":254,"src":"3993:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4016:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4008:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4063:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:1"},"scope":699,"src":"3974:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4520:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4538:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4530:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4546:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4577:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4584:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4593:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4568:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4568:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4610:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4129:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4456:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4448:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4473:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4465:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4514:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:1"},"scope":699,"src":"4431:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5323:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5341:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5333:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5351:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5389:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5395:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5404:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5373:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5373:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5431:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5437:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5441:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5421:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5421:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5458:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4634:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5229:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5221:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5251:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5243:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5271:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5317:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:1"},"scope":699,"src":"5190:286:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5965:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5983:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5975:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5991:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6022:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6029:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6048:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6055:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6038:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6066:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6013:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"6013:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6087:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5482:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5906:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5915:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5959:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:1"},"scope":699,"src":"5871:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6691:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"6717:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6739:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6776:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6783:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6766:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6809:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6829:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6801:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6896:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6929:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6936:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6945:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6964:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6920:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6920:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"7001:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6111:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6627:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6636:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6685:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:1"},"scope":699,"src":"6592:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7581:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7599:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7591:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7677:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7669:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7765:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7771:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7775:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7744:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7744:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7793:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7815:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7825:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7848:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7863:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7840:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7922:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7946:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7956:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7964:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7978:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7946:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8161:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8171:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8178:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8161:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8219:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8225:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8229:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8210:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8205:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8267:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8273:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8277:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8247:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8247:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7025:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7509:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7531:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7523:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7551:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7581:0:1"},"scope":699,"src":"7473:818:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8632:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8650:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8642:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8751:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8760:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8718:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8718:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8778:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8794:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8778:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8810:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8946:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8956:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8968:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8946:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9029:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8999:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8994:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9079:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9088:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9047:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9047:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8297:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8590:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8582:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8607:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8599:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8632:0:1"},"scope":699,"src":"8567:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9487:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9505:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9497:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9617:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9575:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9575:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9635:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9660:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9670:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9696:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9688:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9769:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9793:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9803:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9814:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9793:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9930:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9946:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9930:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9987:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10008:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9978:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9973:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10046:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10067:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"10026:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"10026:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9108:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9445:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9437:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9462:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9454:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9487:0:1"},"scope":699,"src":"9422:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10617:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10635:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10627:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10713:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10705:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10784:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10796:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10803:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10814:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10784:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10844:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10851:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10860:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10835:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10830:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10087:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10539:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10531:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10562:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10554:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10587:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10579:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10617:0:1"},"scope":699,"src":"10504:370:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11275:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11285:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11322:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11329:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11312:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11351:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11347:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11390:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11412:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11432:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11404:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11486:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11523:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11530:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11539:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11558:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11514:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11514:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10880:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11197:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11189:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11220:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11212:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11245:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11275:0:1"},"scope":699,"src":"11155:441:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12299:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11602:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12227:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12219:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12249:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12241:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12269:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12261:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12299:0:1"},"scope":699,"src":"12180:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"13007:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12307:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12935:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12927:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12957:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12949:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12977:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12969:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"13007:0:1"},"scope":699,"src":"12889:120:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1401:11610:1","usedErrors":[]}],"src":"105:12907:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2685:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2677:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2707:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2699:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2727:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2719:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2758:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:2"},"scope":777,"src":"2646:118:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2564:2","usedErrors":[]}],"src":"106:2661:2"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"}},"@openzeppelin/contracts/utils/Context.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":813,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":809,"id":812,"nodeType":"Return","src":"712:17:4"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":824,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":818,"id":821,"nodeType":"Return","src":"819:15:4"}]},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":824,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":825,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2225],"Strings":[999]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1000,"sourceUnit":2226,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"153:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":999,"linearizedBaseContracts":[999],"name":"Strings","nameLocation":"196:7:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":831,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:5","nodeType":"VariableDeclaration","scope":999,"src":"210:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":829,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":834,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:5","nodeType":"VariableDeclaration","scope":999,"src":"270:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":832,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":881,"nodeType":"Block","src":"486:625:5","statements":[{"id":880,"nodeType":"UncheckedBlock","src":"496:609:5","statements":[{"assignments":[843],"declarations":[{"constant":false,"id":843,"mutability":"mutable","name":"length","nameLocation":"528:6:5","nodeType":"VariableDeclaration","scope":880,"src":"520:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":850,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"548:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":844,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"537:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2225_$","typeString":"type(library Math)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"537:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:5"},{"assignments":[852],"declarations":[{"constant":false,"id":852,"mutability":"mutable","name":"buffer","nameLocation":"586:6:5","nodeType":"VariableDeclaration","scope":880,"src":"572:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":857,"initialValue":{"arguments":[{"id":855,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"606:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":853,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:5"},{"assignments":[859],"declarations":[{"constant":false,"id":859,"mutability":"mutable","name":"ptr","nameLocation":"635:3:5","nodeType":"VariableDeclaration","scope":880,"src":"627:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":860,"nodeType":"VariableDeclarationStatement","src":"627:11:5"},{"AST":{"nodeType":"YulBlock","src":"708:67:5","statements":[{"nodeType":"YulAssignment","src":"726:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:5"},"nodeType":"YulFunctionCall","src":"745:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:5"},"nodeType":"YulFunctionCall","src":"733:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":852,"isOffset":false,"isSlot":false,"src":"737:6:5","valueSize":1},{"declaration":843,"isOffset":false,"isSlot":false,"src":"753:6:5","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"726:3:5","valueSize":1}],"id":861,"nodeType":"InlineAssembly","src":"699:76:5"},{"body":{"id":876,"nodeType":"Block","src":"801:267:5","statements":[{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:5","subExpression":{"id":863,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"819:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":865,"nodeType":"ExpressionStatement","src":"819:5:5"},{"AST":{"nodeType":"YulBlock","src":"902:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:5"},"nodeType":"YulFunctionCall","src":"942:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:5"},"nodeType":"YulFunctionCall","src":"937:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:5"},"nodeType":"YulFunctionCall","src":"924:44:5"},"nodeType":"YulExpressionStatement","src":"924:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":831,"isOffset":false,"isSlot":false,"src":"958:8:5","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"932:3:5","valueSize":1},{"declaration":837,"isOffset":false,"isSlot":false,"src":"946:5:5","valueSize":1}],"id":866,"nodeType":"InlineAssembly","src":"893:93:5"},{"expression":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1003:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":870,"nodeType":"ExpressionStatement","src":"1003:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":875,"nodeType":"IfStatement","src":"1032:21:5","trueBody":{"id":874,"nodeType":"Break","src":"1048:5:5"}}]},"condition":{"hexValue":"74727565","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":877,"nodeType":"WhileStatement","src":"788:280:5"},{"expression":{"id":878,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"1088:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":841,"id":879,"nodeType":"Return","src":"1081:13:5"}]}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"320:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":882,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:5","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"value","nameLocation":"441:5:5","nodeType":"VariableDeclaration","scope":882,"src":"433:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:5"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"471:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":839,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:5"},"scope":999,"src":"415:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"1290:100:5","statements":[{"id":900,"nodeType":"UncheckedBlock","src":"1300:84:5","statements":[{"expression":{"arguments":[{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1343:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1362:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":892,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1350:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2225_$","typeString":"type(library Math)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2185,"src":"1350:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":890,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[902,978,998],"referencedDeclaration":978,"src":"1331:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":889,"id":899,"nodeType":"Return","src":"1324:49:5"}]}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"1117:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:5","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"value","nameLocation":"1245:5:5","nodeType":"VariableDeclaration","scope":902,"src":"1237:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:5"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"1275:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:5"},"scope":999,"src":"1216:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"1603:347:5","statements":[{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:5","nodeType":"VariableDeclaration","scope":977,"src":"1613:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":922,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":917,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1649:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":914,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:5"},{"expression":{"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":923,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1670:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":925,"indexExpression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":928,"nodeType":"ExpressionStatement","src":"1670:15:5"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":929,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1695:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":931,"indexExpression":{"hexValue":"31","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":934,"nodeType":"ExpressionStatement","src":"1695:15:5"},{"body":{"id":963,"nodeType":"Block","src":"1765:83:5","statements":[{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1779:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":951,"indexExpression":{"id":950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1786:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":952,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"1791:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":956,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1800:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":958,"nodeType":"ExpressionStatement","src":"1779:33:5"},{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"1826:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1753:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":964,"initializationExpression":{"assignments":[936],"declarations":[{"constant":false,"id":936,"mutability":"mutable","name":"i","nameLocation":"1733:1:5","nodeType":"VariableDeclaration","scope":964,"src":"1725:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":938,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1741:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:5"},"loopExpression":{"expression":{"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:5","subExpression":{"id":946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"nodeType":"ExpressionStatement","src":"1760:3:5"},"nodeType":"ForStatement","src":"1720:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1865:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"1857:55:5"},{"expression":{"arguments":[{"id":974,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1936:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:5","typeDescriptions":{}}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":911,"id":976,"nodeType":"Return","src":"1922:21:5"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"1396:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:5","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"value","nameLocation":"1542:5:5","nodeType":"VariableDeclaration","scope":978,"src":"1534:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"length","nameLocation":"1557:6:5","nodeType":"VariableDeclaration","scope":978,"src":"1549:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:5"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"1588:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":909,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:5"},"scope":999,"src":"1513:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"2175:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":991,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"2220:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":989,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:5","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:5","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":994,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"2228:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":986,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[902,978,998],"referencedDeclaration":978,"src":"2192:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":985,"id":996,"nodeType":"Return","src":"2185:59:5"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"1956:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:5","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"addr","nameLocation":"2131:4:5","nodeType":"VariableDeclaration","scope":998,"src":"2123:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:5"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"2160:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:5"},"scope":999,"src":"2102:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1000,"src":"188:2065:5","usedErrors":[]}],"src":"101:2153:5"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1360],"Math":[2225],"Strings":[999]},"id":1361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1361,"sourceUnit":1000,"src":"137:24:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"163:205:6","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1360,"linearizedBaseContracts":[1360],"name":"ECDSA","nameLocation":"377:5:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1009,"members":[{"id":1004,"name":"NoError","nameLocation":"417:7:6","nodeType":"EnumValue","src":"417:7:6"},{"id":1005,"name":"InvalidSignature","nameLocation":"434:16:6","nodeType":"EnumValue","src":"434:16:6"},{"id":1006,"name":"InvalidSignatureLength","nameLocation":"460:22:6","nodeType":"EnumValue","src":"460:22:6"},{"id":1007,"name":"InvalidSignatureS","nameLocation":"492:17:6","nodeType":"EnumValue","src":"492:17:6"},{"id":1008,"name":"InvalidSignatureV","nameLocation":"519:17:6","nodeType":"EnumValue","src":"519:17:6"}],"name":"RecoverError","nameLocation":"394:12:6","nodeType":"EnumDefinition","src":"389:175:6"},{"body":{"id":1052,"nodeType":"Block","src":"624:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"638:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1016,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"647:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"647:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"734:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1022,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"743:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1005,"src":"743:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"843:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1031,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"852:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1006,"src":"852:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"965:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1040,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"974:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1007,"src":"974:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1048,"nodeType":"IfStatement","src":"961:114:6","trueBody":{"id":1047,"nodeType":"Block","src":"1006:69:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1043,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"1020:44:6"}]}},"id":1049,"nodeType":"IfStatement","src":"839:236:6","trueBody":{"id":1038,"nodeType":"Block","src":"889:66:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1034,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"903:41:6"}]}},"id":1050,"nodeType":"IfStatement","src":"730:345:6","trueBody":{"id":1029,"nodeType":"Block","src":"774:59:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1025,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"788:34:6"}]}},"id":1051,"nodeType":"IfStatement","src":"634:441:6","trueBody":{"id":1020,"nodeType":"Block","src":"669:55:6","statements":[{"functionReturnParameters":1014,"id":1019,"nodeType":"Return","src":"683:7:6"}]}}]},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:6","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"error","nameLocation":"604:5:6","nodeType":"VariableDeclaration","scope":1053,"src":"591:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1011,"nodeType":"UserDefinedTypeName","pathNode":{"id":1010,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"591:12:6"},"referencedDeclaration":1009,"src":"591:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:6"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"624:0:6"},"scope":1360,"src":"570:511:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1098,"nodeType":"Block","src":"2249:626:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1066,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2263:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1096,"nodeType":"Block","src":"2788:81:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:6","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1092,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"2822:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1006,"src":"2822:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"id":1094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1065,"id":1095,"nodeType":"Return","src":"2802:56:6"}]},"id":1097,"nodeType":"IfStatement","src":"2259:610:6","trueBody":{"id":1087,"nodeType":"Block","src":"2287:495:6","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"r","nameLocation":"2309:1:6","nodeType":"VariableDeclaration","scope":1087,"src":"2301:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1072,"nodeType":"VariableDeclarationStatement","src":"2301:9:6"},{"assignments":[1074],"declarations":[{"constant":false,"id":1074,"mutability":"mutable","name":"s","nameLocation":"2332:1:6","nodeType":"VariableDeclaration","scope":1087,"src":"2324:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1075,"nodeType":"VariableDeclarationStatement","src":"2324:9:6"},{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"v","nameLocation":"2353:1:6","nodeType":"VariableDeclaration","scope":1087,"src":"2347:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1076,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1078,"nodeType":"VariableDeclarationStatement","src":"2347:7:6"},{"AST":{"nodeType":"YulBlock","src":"2555:171:6","statements":[{"nodeType":"YulAssignment","src":"2573:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:6"},"nodeType":"YulFunctionCall","src":"2584:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:6"},"nodeType":"YulFunctionCall","src":"2578:27:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:6"}]},{"nodeType":"YulAssignment","src":"2622:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:6"},"nodeType":"YulFunctionCall","src":"2633:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:6"},"nodeType":"YulFunctionCall","src":"2627:27:6"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:6"}]},{"nodeType":"YulAssignment","src":"2671:41:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:6","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:6"},"nodeType":"YulFunctionCall","src":"2690:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:6"},"nodeType":"YulFunctionCall","src":"2684:27:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:6"},"nodeType":"YulFunctionCall","src":"2676:36:6"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1071,"isOffset":false,"isSlot":false,"src":"2573:1:6","valueSize":1},{"declaration":1074,"isOffset":false,"isSlot":false,"src":"2622:1:6","valueSize":1},{"declaration":1058,"isOffset":false,"isSlot":false,"src":"2588:9:6","valueSize":1},{"declaration":1058,"isOffset":false,"isSlot":false,"src":"2637:9:6","valueSize":1},{"declaration":1058,"isOffset":false,"isSlot":false,"src":"2694:9:6","valueSize":1},{"declaration":1077,"isOffset":false,"isSlot":false,"src":"2671:1:6","valueSize":1}],"id":1079,"nodeType":"InlineAssembly","src":"2546:180:6"},{"expression":{"arguments":[{"id":1081,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2757:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1082,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2763:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1083,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2766:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1084,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2769:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1080,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1099,1173,1267],"referencedDeclaration":1267,"src":"2746:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1065,"id":1086,"nodeType":"Return","src":"2739:32:6"}]}}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"1087:1053:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:6","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"hash","nameLocation":"2173:4:6","nodeType":"VariableDeclaration","scope":1099,"src":"2165:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"signature","nameLocation":"2192:9:6","nodeType":"VariableDeclaration","scope":1099,"src":"2179:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:6"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"2226:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"2235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1063,"nodeType":"UserDefinedTypeName","pathNode":{"id":1062,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"2235:12:6"},"referencedDeclaration":1009,"src":"2235:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:6"},"scope":1360,"src":"2145:730:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"3748:140:6","statements":[{"assignments":[1110,1113],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:6","nodeType":"VariableDeclaration","scope":1125,"src":"3759:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"error","nameLocation":"3791:5:6","nodeType":"VariableDeclaration","scope":1125,"src":"3778:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1112,"nodeType":"UserDefinedTypeName","pathNode":{"id":1111,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"3778:12:6"},"referencedDeclaration":1009,"src":"3778:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1118,"initialValue":{"arguments":[{"id":1115,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3811:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1116,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3817:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1114,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1099,1173,1267],"referencedDeclaration":1099,"src":"3800:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:6"},{"expression":{"arguments":[{"id":1120,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3849:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}],"id":1119,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3837:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1009_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"3837:18:6"},{"expression":{"id":1123,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3872:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1108,"id":1124,"nodeType":"Return","src":"3865:16:6"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"2881:775:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:6","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"hash","nameLocation":"3686:4:6","nodeType":"VariableDeclaration","scope":1126,"src":"3678:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"signature","nameLocation":"3705:9:6","nodeType":"VariableDeclaration","scope":1126,"src":"3692:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:6"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"3739:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:6"},"scope":1360,"src":"3661:227:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"4275:203:6","statements":[{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"s","nameLocation":"4293:1:6","nodeType":"VariableDeclaration","scope":1172,"src":"4285:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1149,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4297:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:6","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:6"},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"v","nameLocation":"4393:1:6","nodeType":"VariableDeclaration","scope":1172,"src":"4387:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1150,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1164,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1156,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4412:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:6","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:6","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1152,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:6","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:6"},{"expression":{"arguments":[{"id":1166,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4457:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1167,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4463:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1168,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4466:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1169,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4469:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1165,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1099,1173,1267],"referencedDeclaration":1267,"src":"4446:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1140,"id":1171,"nodeType":"Return","src":"4439:32:6"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"3894:243:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:6","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"hash","nameLocation":"4179:4:6","nodeType":"VariableDeclaration","scope":1173,"src":"4171:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"r","nameLocation":"4201:1:6","nodeType":"VariableDeclaration","scope":1173,"src":"4193:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"vs","nameLocation":"4220:2:6","nodeType":"VariableDeclaration","scope":1173,"src":"4212:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:6"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"4252:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"4261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"4261:12:6"},"referencedDeclaration":1009,"src":"4261:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:6"},"scope":1360,"src":"4142:336:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"4759:136:6","statements":[{"assignments":[1186,1189],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:6","nodeType":"VariableDeclaration","scope":1202,"src":"4770:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"error","nameLocation":"4802:5:6","nodeType":"VariableDeclaration","scope":1202,"src":"4789:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"4789:12:6"},"referencedDeclaration":1009,"src":"4789:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"id":1191,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"4822:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4828:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1193,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4831:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1190,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1099,1173,1267],"referencedDeclaration":1173,"src":"4811:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:6"},{"expression":{"arguments":[{"id":1197,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4856:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}],"id":1196,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4844:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1009_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"4844:18:6"},{"expression":{"id":1200,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4879:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1184,"id":1201,"nodeType":"Return","src":"4872:16:6"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"4484:154:6","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:6","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"hash","nameLocation":"4677:4:6","nodeType":"VariableDeclaration","scope":1203,"src":"4669:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"r","nameLocation":"4699:1:6","nodeType":"VariableDeclaration","scope":1203,"src":"4691:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"vs","nameLocation":"4718:2:6","nodeType":"VariableDeclaration","scope":1203,"src":"4710:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:6"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"4750:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:6"},"scope":1360,"src":"4643:252:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"5218:1345:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1222,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6114:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:6","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"6102:161:6","trueBody":{"id":1234,"nodeType":"Block","src":"6187:76:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:6","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1230,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6221:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1007,"src":"6221:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"id":1232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1219,"id":1233,"nodeType":"Return","src":"6201:51:6"}]}},{"assignments":[1237],"declarations":[{"constant":false,"id":1237,"mutability":"mutable","name":"signer","nameLocation":"6365:6:6","nodeType":"VariableDeclaration","scope":1266,"src":"6357:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1244,"initialValue":{"arguments":[{"id":1239,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6384:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1240,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"6390:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1241,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"6393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1242,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6396:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1238,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:6","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6412:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:6","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"6408:101:6","trueBody":{"id":1259,"nodeType":"Block","src":"6434:75:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:6","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1255,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6468:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1005,"src":"6468:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"id":1257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1219,"id":1258,"nodeType":"Return","src":"6448:50:6"}]}},{"expression":{"components":[{"id":1261,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6527:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1262,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6535:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1009_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"6535:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"id":1264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1219,"id":1265,"nodeType":"Return","src":"6519:37:6"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"4901:163:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:6","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"hash","nameLocation":"5106:4:6","nodeType":"VariableDeclaration","scope":1267,"src":"5098:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"v","nameLocation":"5126:1:6","nodeType":"VariableDeclaration","scope":1267,"src":"5120:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1207,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"r","nameLocation":"5145:1:6","nodeType":"VariableDeclaration","scope":1267,"src":"5137:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"s","nameLocation":"5164:1:6","nodeType":"VariableDeclaration","scope":1267,"src":"5156:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:6"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"5195:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"5204:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"5204:12:6"},"referencedDeclaration":1009,"src":"5204:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:6"},"scope":1360,"src":"5069:1494:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"6828:138:6","statements":[{"assignments":[1282,1285],"declarations":[{"constant":false,"id":1282,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:6","nodeType":"VariableDeclaration","scope":1299,"src":"6839:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"error","nameLocation":"6871:5:6","nodeType":"VariableDeclaration","scope":1299,"src":"6858:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"6858:12:6"},"referencedDeclaration":1009,"src":"6858:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[{"id":1287,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6891:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1288,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6897:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1289,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6900:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1290,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6903:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1286,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1099,1173,1267],"referencedDeclaration":1267,"src":"6880:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1009_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:6"},{"expression":{"arguments":[{"id":1294,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6927:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1009","typeString":"enum ECDSA.RecoverError"}],"id":1293,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6915:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1009_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"6915:18:6"},{"expression":{"id":1297,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6950:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1280,"id":1298,"nodeType":"Return","src":"6943:16:6"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"6569:122:6","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:6","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"hash","nameLocation":"6730:4:6","nodeType":"VariableDeclaration","scope":1300,"src":"6722:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"v","nameLocation":"6750:1:6","nodeType":"VariableDeclaration","scope":1300,"src":"6744:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1271,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"r","nameLocation":"6769:1:6","nodeType":"VariableDeclaration","scope":1300,"src":"6761:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"s","nameLocation":"6788:1:6","nodeType":"VariableDeclaration","scope":1300,"src":"6780:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:6"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"6819:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:6"},"scope":1360,"src":"6696:270:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"7334:187:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1312,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7508:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1309,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1308,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1307,"id":1315,"nodeType":"Return","src":"7438:76:6"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"6972:279:6","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:6","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"hash","nameLocation":"7296:4:6","nodeType":"VariableDeclaration","scope":1317,"src":"7288:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:6"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"7325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:6"},"scope":1360,"src":"7256:265:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1338,"nodeType":"Block","src":"7886:116:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1331,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7981:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1329,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"7964:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$999_$","typeString":"type(library Strings)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":882,"src":"7964:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1334,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7992:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1324,"id":1337,"nodeType":"Return","src":"7896:99:6"}]},"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"7527:274:6","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:6","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"s","nameLocation":"7851:1:6","nodeType":"VariableDeclaration","scope":1339,"src":"7838:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:6"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"7877:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:6"},"scope":1360,"src":"7806:196:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"8443:92:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":1353,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"8499:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1354,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"8516:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1349,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1348,"id":1357,"nodeType":"Return","src":"8453:75:6"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"8008:328:6","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:6","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:6","nodeType":"VariableDeclaration","scope":1359,"src":"8366:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:6","nodeType":"VariableDeclaration","scope":1359,"src":"8391:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:6"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"8434:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:6"},"scope":1360,"src":"8341:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1361,"src":"369:8168:6","usedErrors":[]}],"src":"112:8426:6"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2225]},"id":2226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1362,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"128:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2225,"linearizedBaseContracts":[2225],"name":"Math","nameLocation":"210:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1367,"members":[{"id":1364,"name":"Down","nameLocation":"245:4:7","nodeType":"EnumValue","src":"245:4:7"},{"id":1365,"name":"Up","nameLocation":"287:2:7","nodeType":"EnumValue","src":"287:2:7"},{"id":1366,"name":"Zero","nameLocation":"318:4:7","nodeType":"EnumValue","src":"318:4:7"}],"name":"Rounding","nameLocation":"226:8:7","nodeType":"EnumDefinition","src":"221:122:7"},{"body":{"id":1384,"nodeType":"Block","src":"480:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"501:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"509:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:7","trueExpression":{"id":1380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"505:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1376,"id":1383,"nodeType":"Return","src":"490:20:7"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"349:59:7","text":" @dev Returns the largest of two numbers."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:7","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"a","nameLocation":"434:1:7","nodeType":"VariableDeclaration","scope":1385,"src":"426:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"b","nameLocation":"445:1:7","nodeType":"VariableDeclaration","scope":1385,"src":"437:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:7"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:7"},"scope":2225,"src":"413:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1402,"nodeType":"Block","src":"655:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"672:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"676:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"684:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:7","trueExpression":{"id":1398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1394,"id":1401,"nodeType":"Return","src":"665:20:7"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"523:60:7","text":" @dev Returns the smallest of two numbers."},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:7","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"a","nameLocation":"609:1:7","nodeType":"VariableDeclaration","scope":1403,"src":"601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"b","nameLocation":"620:1:7","nodeType":"VariableDeclaration","scope":1403,"src":"612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:7"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"646:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:7"},"scope":2225,"src":"588:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"876:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"931:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"935:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"941:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"945:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1412,"id":1424,"nodeType":"Return","src":"923:28:7"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"698:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:7","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"a","nameLocation":"830:1:7","nodeType":"VariableDeclaration","scope":1426,"src":"822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"b","nameLocation":"841:1:7","nodeType":"VariableDeclaration","scope":1426,"src":"833:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:7"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"867:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:7"},"scope":2225,"src":"805:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"1228:123:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1316:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1330:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"1339:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:7","trueExpression":{"hexValue":"30","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1435,"id":1449,"nodeType":"Return","src":"1309:35:7"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"964:188:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:7","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"a","nameLocation":"1182:1:7","nodeType":"VariableDeclaration","scope":1451,"src":"1174:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"b","nameLocation":"1193:1:7","nodeType":"VariableDeclaration","scope":1451,"src":"1185:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:7"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"1219:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:7"},"scope":2225,"src":"1157:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1572,"nodeType":"Block","src":"1795:3797:7","statements":[{"id":1571,"nodeType":"UncheckedBlock","src":"1805:3781:7","statements":[{"assignments":[1464],"declarations":[{"constant":false,"id":1464,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:7","nodeType":"VariableDeclaration","scope":1571,"src":"2126:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1465,"nodeType":"VariableDeclarationStatement","src":"2126:13:7"},{"assignments":[1467],"declarations":[{"constant":false,"id":1467,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:7","nodeType":"VariableDeclaration","scope":1571,"src":"2198:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1468,"nodeType":"VariableDeclarationStatement","src":"2198:13:7"},{"AST":{"nodeType":"YulBlock","src":"2278:157:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:7"},"nodeType":"YulFunctionCall","src":"2319:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:7"},"nodeType":"YulFunctionCall","src":"2306:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:7","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:7"},"nodeType":"YulFunctionCall","src":"2352:9:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:7"}]},{"nodeType":"YulAssignment","src":"2378:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:7"},"nodeType":"YulFunctionCall","src":"2391:14:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:7"},"nodeType":"YulFunctionCall","src":"2407:13:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:7"},"nodeType":"YulFunctionCall","src":"2387:34:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1464,"isOffset":false,"isSlot":false,"src":"2343:5:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"2399:5:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"2414:5:7","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"2378:5:7","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"2313:1:7","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"2356:1:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2316:1:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2359:1:7","valueSize":1}],"id":1469,"nodeType":"InlineAssembly","src":"2269:166:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2516:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"2512:75:7","trueBody":{"id":1477,"nodeType":"Block","src":"2528:59:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2553:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2561:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1462,"id":1476,"nodeType":"Return","src":"2546:26:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2697:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1481,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2711:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"ExpressionStatement","src":"2689:28:7"},{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:7","nodeType":"VariableDeclaration","scope":1571,"src":"2973:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"nodeType":"VariableDeclarationStatement","src":"2973:17:7"},{"AST":{"nodeType":"YulBlock","src":"3013:291:7","statements":[{"nodeType":"YulAssignment","src":"3082:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:7"},"nodeType":"YulFunctionCall","src":"3095:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:7"}]},{"nodeType":"YulAssignment","src":"3202:41:7","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:7"},"nodeType":"YulFunctionCall","src":"3222:20:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:7"},"nodeType":"YulFunctionCall","src":"3211:32:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:7"}]},{"nodeType":"YulAssignment","src":"3260:30:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:7"},"nodeType":"YulFunctionCall","src":"3269:21:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3108:11:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"3236:5:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"3260:5:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"3273:5:7","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"3202:5:7","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"3215:5:7","valueSize":1},{"declaration":1486,"isOffset":false,"isSlot":false,"src":"3082:9:7","valueSize":1},{"declaration":1486,"isOffset":false,"isSlot":false,"src":"3225:9:7","valueSize":1},{"declaration":1486,"isOffset":false,"isSlot":false,"src":"3280:9:7","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"3102:1:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"3105:1:7","valueSize":1}],"id":1488,"nodeType":"InlineAssembly","src":"3004:300:7"},{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"twos","nameLocation":"3619:4:7","nodeType":"VariableDeclaration","scope":1571,"src":"3611:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1498,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3626:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:7","subExpression":{"id":1492,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3642:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:7"},{"AST":{"nodeType":"YulBlock","src":"3681:362:7","statements":[{"nodeType":"YulAssignment","src":"3746:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:7"},"nodeType":"YulFunctionCall","src":"3761:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:7"}]},{"nodeType":"YulAssignment","src":"3850:25:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:7"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:7"},"nodeType":"YulFunctionCall","src":"3859:16:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:7"}]},{"nodeType":"YulAssignment","src":"3990:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:7"},"nodeType":"YulFunctionCall","src":"4006:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:7"},"nodeType":"YulFunctionCall","src":"4002:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:7"},"nodeType":"YulFunctionCall","src":"3998:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3746:11:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3765:11:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"3850:5:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"3863:5:7","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"3778:4:7","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"3870:4:7","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"3990:4:7","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"4013:4:7","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"4020:4:7","valueSize":1}],"id":1499,"nodeType":"InlineAssembly","src":"3672:371:7"},{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1500,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4109:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"4118:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1502,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4126:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"4109:21:7"},{"assignments":[1507],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:7","nodeType":"VariableDeclaration","scope":1571,"src":"4448:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4471:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:7"},{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4719:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4733:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"4704:36:7"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4773:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4788:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"4773:36:7"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4843:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4858:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"4843:36:7"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4928:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"4913:36:7"},{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4983:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4998:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"4983:36:7"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5054:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5069:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1558,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"5054:36:7"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5524:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"5533:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1565,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5541:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"5524:24:7"},{"expression":{"id":1569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5569:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1462,"id":1570,"nodeType":"Return","src":"5562:13:7"}]}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"1357:305:7","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:7","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"x","nameLocation":"1700:1:7","nodeType":"VariableDeclaration","scope":1573,"src":"1692:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"y","nameLocation":"1719:1:7","nodeType":"VariableDeclaration","scope":1573,"src":"1711:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:7","nodeType":"VariableDeclaration","scope":1573,"src":"1730:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:7"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"result","nameLocation":"1787:6:7","nodeType":"VariableDeclaration","scope":1573,"src":"1779:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:7"},"scope":2225,"src":"1667:3925:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1616,"nodeType":"Block","src":"5872:189:7","statements":[{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"result","nameLocation":"5890:6:7","nodeType":"VariableDeclaration","scope":1616,"src":"5882:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1595,"initialValue":{"arguments":[{"id":1591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5906:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1592,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5909:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1593,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5912:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1573,1617],"referencedDeclaration":1573,"src":"5899:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5938:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1597,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5950:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1367_$","typeString":"type(enum Math.Rounding)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"5950:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"src":"5938:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5972:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5975:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1603,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5978:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1600,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1613,"nodeType":"IfStatement","src":"5934:98:7","trueBody":{"id":1612,"nodeType":"Block","src":"5996:36:7","statements":[{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"6010:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"6010:11:7"}]}},{"expression":{"id":1614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"6048:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1587,"id":1615,"nodeType":"Return","src":"6041:13:7"}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"5598:121:7","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:7","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"x","nameLocation":"5757:1:7","nodeType":"VariableDeclaration","scope":1617,"src":"5749:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"y","nameLocation":"5776:1:7","nodeType":"VariableDeclaration","scope":1617,"src":"5768:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:7","nodeType":"VariableDeclaration","scope":1617,"src":"5787:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:7","nodeType":"VariableDeclaration","scope":1617,"src":"5816:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"typeName":{"id":1582,"nodeType":"UserDefinedTypeName","pathNode":{"id":1581,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"5816:8:7"},"referencedDeclaration":1367,"src":"5816:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:7"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"5863:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:7"},"scope":2225,"src":"5724:337:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"6337:1585:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"6351:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"6347:45:7","trueBody":{"id":1630,"nodeType":"Block","src":"6359:33:7","statements":[{"expression":{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1624,"id":1629,"nodeType":"Return","src":"6373:8:7"}]}},{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"result","nameLocation":"7079:6:7","nodeType":"VariableDeclaration","scope":1728,"src":"7071:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1642,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7099:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1635,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1897,1933],"referencedDeclaration":1897,"src":"7094:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:7"},{"id":1727,"nodeType":"UncheckedBlock","src":"7508:408:7","statements":[{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7532:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7542:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7551:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7555:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"7532:35:7"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7581:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7591:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7600:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7604:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"7581:35:7"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7630:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7640:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7649:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7653:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"7630:35:7"},{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7679:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7689:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7698:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7702:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"7679:35:7"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7738:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7747:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7751:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"7728:35:7"},{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7777:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7787:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7796:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7800:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"7777:35:7"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7826:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7836:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7845:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7849:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"7826:35:7"},{"expression":{"arguments":[{"id":1721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7886:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7894:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7898:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1720,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7882:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1624,"id":1726,"nodeType":"Return","src":"7875:30:7"}]}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"6067:208:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:7","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"a","nameLocation":"6302:1:7","nodeType":"VariableDeclaration","scope":1729,"src":"6294:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1729,"src":"6328:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:7"},"scope":2225,"src":"6280:1642:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"8098:161:7","statements":[{"id":1763,"nodeType":"UncheckedBlock","src":"8108:145:7","statements":[{"assignments":[1741],"declarations":[{"constant":false,"id":1741,"mutability":"mutable","name":"result","nameLocation":"8140:6:7","nodeType":"VariableDeclaration","scope":1763,"src":"8132:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"arguments":[{"id":1743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"8154:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1729,1765],"referencedDeclaration":1729,"src":"8149:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"8177:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1747,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"8187:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1748,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"8199:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1367_$","typeString":"type(enum Math.Rounding)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"8199:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"src":"8187:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"8214:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"8223:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"8232:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:7","trueExpression":{"hexValue":"31","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1739,"id":1762,"nodeType":"Return","src":"8170:72:7"}]}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"7928:89:7","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:7","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"a","nameLocation":"8044:1:7","nodeType":"VariableDeclaration","scope":1765,"src":"8036:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:7","nodeType":"VariableDeclaration","scope":1765,"src":"8047:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"8047:8:7"},"referencedDeclaration":1367,"src":"8047:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:7"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"8089:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:7"},"scope":2225,"src":"8022:237:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"8444:922:7","statements":[{"assignments":[1774],"declarations":[{"constant":false,"id":1774,"mutability":"mutable","name":"result","nameLocation":"8462:6:7","nodeType":"VariableDeclaration","scope":1896,"src":"8454:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1776,"initialValue":{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:7"},{"id":1893,"nodeType":"UncheckedBlock","src":"8482:855:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8510:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"IfStatement","src":"8506:99:7","trueBody":{"id":1790,"nodeType":"Block","src":"8528:77:7","statements":[{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8546:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"8546:13:7"},{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8577:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ExpressionStatement","src":"8577:13:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8622:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"8618:96:7","trueBody":{"id":1805,"nodeType":"Block","src":"8639:75:7","statements":[{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8657:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"8657:12:7"},{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8687:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"8687:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8731:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1821,"nodeType":"IfStatement","src":"8727:96:7","trueBody":{"id":1820,"nodeType":"Block","src":"8748:75:7","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8766:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"8766:12:7"},{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8796:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"8796:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8840:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"8836:96:7","trueBody":{"id":1835,"nodeType":"Block","src":"8857:75:7","statements":[{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8875:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"8875:12:7"},{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8905:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"nodeType":"ExpressionStatement","src":"8905:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8949:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"8945:93:7","trueBody":{"id":1850,"nodeType":"Block","src":"8965:73:7","statements":[{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8983:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"8983:11:7"},{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9012:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"9012:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"9055:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1866,"nodeType":"IfStatement","src":"9051:93:7","trueBody":{"id":1865,"nodeType":"Block","src":"9071:73:7","statements":[{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"9089:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1860,"nodeType":"ExpressionStatement","src":"9089:11:7"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9118:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"9118:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"9161:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1881,"nodeType":"IfStatement","src":"9157:93:7","trueBody":{"id":1880,"nodeType":"Block","src":"9177:73:7","statements":[{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"9195:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"9195:11:7"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9224:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"9224:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"9267:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"9263:64:7","trueBody":{"id":1891,"nodeType":"Block","src":"9283:44:7","statements":[{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9301:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ExpressionStatement","src":"9301:11:7"}]}}]},{"expression":{"id":1894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9353:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1772,"id":1895,"nodeType":"Return","src":"9346:13:7"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"8265:113:7","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:7","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"value","nameLocation":"8405:5:7","nodeType":"VariableDeclaration","scope":1897,"src":"8397:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:7"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"8435:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:7"},"scope":2225,"src":"8383:983:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"9599:165:7","statements":[{"id":1931,"nodeType":"UncheckedBlock","src":"9609:149:7","statements":[{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"result","nameLocation":"9641:6:7","nodeType":"VariableDeclaration","scope":1931,"src":"9633:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"initialValue":{"arguments":[{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"9655:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1910,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1897,1933],"referencedDeclaration":1897,"src":"9650:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"9682:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9692:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1916,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"9704:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1367_$","typeString":"type(enum Math.Rounding)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"9704:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"src":"9692:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"9724:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"9733:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:7","trueExpression":{"hexValue":"31","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1907,"id":1930,"nodeType":"Return","src":"9675:72:7"}]}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"9372:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:7","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"9541:5:7","nodeType":"VariableDeclaration","scope":1933,"src":"9533:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:7","nodeType":"VariableDeclaration","scope":1933,"src":"9548:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"9548:8:7"},"referencedDeclaration":1367,"src":"9548:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:7"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"9590:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:7"},"scope":2225,"src":"9519:245:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"9951:828:7","statements":[{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"result","nameLocation":"9969:6:7","nodeType":"VariableDeclaration","scope":2061,"src":"9961:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1944,"initialValue":{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:7"},{"id":2058,"nodeType":"UncheckedBlock","src":"9989:761:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10017:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"10013:99:7","trueBody":{"id":1960,"nodeType":"Block","src":"10034:78:7","statements":[{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10052:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"10052:15:7"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10085:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"10085:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10129:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"nodeType":"IfStatement","src":"10125:99:7","trueBody":{"id":1977,"nodeType":"Block","src":"10146:78:7","statements":[{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10164:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"10164:15:7"},{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10197:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"10197:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10241:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"10237:99:7","trueBody":{"id":1994,"nodeType":"Block","src":"10258:78:7","statements":[{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10276:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"10276:15:7"},{"expression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10309:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1993,"nodeType":"ExpressionStatement","src":"10309:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10353:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2012,"nodeType":"IfStatement","src":"10349:96:7","trueBody":{"id":2011,"nodeType":"Block","src":"10369:76:7","statements":[{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2006,"nodeType":"ExpressionStatement","src":"10387:14:7"},{"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10419:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2010,"nodeType":"ExpressionStatement","src":"10419:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10462:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2029,"nodeType":"IfStatement","src":"10458:96:7","trueBody":{"id":2028,"nodeType":"Block","src":"10478:76:7","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"10496:14:7"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10528:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"10528:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10571:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"10567:96:7","trueBody":{"id":2045,"nodeType":"Block","src":"10587:76:7","statements":[{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10605:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ExpressionStatement","src":"10605:14:7"},{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10637:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"10637:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"10680:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"nodeType":"IfStatement","src":"10676:64:7","trueBody":{"id":2056,"nodeType":"Block","src":"10696:44:7","statements":[{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10714:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ExpressionStatement","src":"10714:11:7"}]}}]},{"expression":{"id":2059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"10766:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1940,"id":2060,"nodeType":"Return","src":"10759:13:7"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"9770:114:7","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:7","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"value","nameLocation":"9912:5:7","nodeType":"VariableDeclaration","scope":2062,"src":"9904:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:7"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"9942:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:7"},"scope":2225,"src":"9889:890:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2097,"nodeType":"Block","src":"11014:165:7","statements":[{"id":2096,"nodeType":"UncheckedBlock","src":"11024:149:7","statements":[{"assignments":[2074],"declarations":[{"constant":false,"id":2074,"mutability":"mutable","name":"result","nameLocation":"11056:6:7","nodeType":"VariableDeclaration","scope":2096,"src":"11048:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2078,"initialValue":{"arguments":[{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"11071:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2062,2098],"referencedDeclaration":2062,"src":"11065:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"11098:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"11108:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2081,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"11120:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1367_$","typeString":"type(enum Math.Rounding)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"11120:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"src":"11108:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"11139:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"11148:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:7","trueExpression":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2072,"id":2095,"nodeType":"Return","src":"11091:71:7"}]}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"10785:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2098,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:7","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"10956:5:7","nodeType":"VariableDeclaration","scope":2098,"src":"10948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:7","nodeType":"VariableDeclaration","scope":2098,"src":"10963:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"typeName":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"10963:8:7"},"referencedDeclaration":1367,"src":"10963:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:7"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2098,"src":"11005:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:7"},"scope":2225,"src":"10933:246:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"11493:600:7","statements":[{"assignments":[2107],"declarations":[{"constant":false,"id":2107,"mutability":"mutable","name":"result","nameLocation":"11511:6:7","nodeType":"VariableDeclaration","scope":2184,"src":"11503:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2109,"initialValue":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:7"},{"id":2181,"nodeType":"UncheckedBlock","src":"11531:533:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11559:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2124,"nodeType":"IfStatement","src":"11555:98:7","trueBody":{"id":2123,"nodeType":"Block","src":"11577:76:7","statements":[{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11595:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"11595:13:7"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"11626:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"11626:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11670:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2139,"nodeType":"IfStatement","src":"11666:95:7","trueBody":{"id":2138,"nodeType":"Block","src":"11687:74:7","statements":[{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11705:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"nodeType":"ExpressionStatement","src":"11705:12:7"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"11735:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"11735:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11778:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2154,"nodeType":"IfStatement","src":"11774:95:7","trueBody":{"id":2153,"nodeType":"Block","src":"11795:74:7","statements":[{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11813:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"11813:12:7"},{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"11843:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"11843:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11886:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"11882:95:7","trueBody":{"id":2168,"nodeType":"Block","src":"11903:74:7","statements":[{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11921:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ExpressionStatement","src":"11921:12:7"},{"expression":{"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"11951:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2167,"nodeType":"ExpressionStatement","src":"11951:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11994:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"nodeType":"IfStatement","src":"11990:64:7","trueBody":{"id":2179,"nodeType":"Block","src":"12010:44:7","statements":[{"expression":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"12028:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2178,"nodeType":"ExpressionStatement","src":"12028:11:7"}]}}]},{"expression":{"id":2182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"12080:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2105,"id":2183,"nodeType":"Return","src":"12073:13:7"}]},"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"11185:240:7","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:7","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"value","nameLocation":"11454:5:7","nodeType":"VariableDeclaration","scope":2185,"src":"11446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:7"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"11484:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:7"},"scope":2225,"src":"11430:663:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"12329:173:7","statements":[{"id":2222,"nodeType":"UncheckedBlock","src":"12339:157:7","statements":[{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"result","nameLocation":"12371:6:7","nodeType":"VariableDeclaration","scope":2222,"src":"12363:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2201,"initialValue":{"arguments":[{"id":2199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2198,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2185,2224],"referencedDeclaration":2185,"src":"12380:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"12414:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"12424:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2204,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"12436:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1367_$","typeString":"type(enum Math.Rounding)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"12436:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"src":"12424:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"12457:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12471:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:7","trueExpression":{"hexValue":"31","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2195,"id":2221,"nodeType":"Return","src":"12407:78:7"}]}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"12099:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:7","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"value","nameLocation":"12271:5:7","nodeType":"VariableDeclaration","scope":2224,"src":"12263:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:7","nodeType":"VariableDeclaration","scope":2224,"src":"12278:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"},"typeName":{"id":2190,"nodeType":"UserDefinedTypeName","pathNode":{"id":2189,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"12278:8:7"},"referencedDeclaration":1367,"src":"12278:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1367","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:7"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"12320:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:7"},"scope":2225,"src":"12247:255:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2226,"src":"202:12302:7","usedErrors":[]}],"src":"103:12402:7"}},"contracts/PeerLocal.sol":{"id":8,"ast":{"absolutePath":"contracts/PeerLocal.sol","exportedSymbols":{"Context":[824],"ECDSA":[1360],"IERC20":[777],"Math":[2225],"Ownable":[112],"PeerLocal":[2590],"Strings":[999]},"id":2591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2227,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2591,"sourceUnit":778,"src":"65:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2591,"sourceUnit":113,"src":"122:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":2230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2591,"sourceUnit":1361,"src":"175:62:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2231,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"261:7:8"},"id":2232,"nodeType":"InheritanceSpecifier","src":"261:7:8"}],"canonicalName":"PeerLocal","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2590,"linearizedBaseContracts":[2590,112,824],"name":"PeerLocal","nameLocation":"248:9:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2235,"mutability":"mutable","name":"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER","nameLocation":"284:38:8","nodeType":"VariableDeclaration","scope":2590,"src":"276:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"276:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4920616d20746865206f776e6572206f66207468697320636f6d6d756e697479","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"325:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_15f74188bd1c6103c80283f66b71416266bfc1efbb33abe4ab1c812bf6580cc8","typeString":"literal_string \"I am the owner of this community\""},"value":"I am the owner of this community"},"visibility":"internal"},{"canonicalName":"PeerLocal.Community","id":2242,"members":[{"constant":false,"id":2237,"mutability":"mutable","name":"ipfsMetadata","nameLocation":"400:12:8","nodeType":"VariableDeclaration","scope":2242,"src":"393:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2236,"name":"string","nodeType":"ElementaryTypeName","src":"393:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"stakingRequirement","nameLocation":"430:18:8","nodeType":"VariableDeclaration","scope":2242,"src":"422:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"owner","nameLocation":"466:5:8","nodeType":"VariableDeclaration","scope":2242,"src":"458:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"458:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Community","nameLocation":"373:9:8","nodeType":"StructDefinition","scope":2590,"src":"366:112:8","visibility":"public"},{"canonicalName":"PeerLocal.Offer","id":2255,"members":[{"constant":false,"id":2244,"mutability":"mutable","name":"owner","nameLocation":"515:5:8","nodeType":"VariableDeclaration","scope":2255,"src":"507:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"communityId","nameLocation":"538:11:8","nodeType":"VariableDeclaration","scope":2255,"src":"530:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"metadata","nameLocation":"566:8:8","nodeType":"VariableDeclaration","scope":2255,"src":"559:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"reputationRequirement","nameLocation":"592:21:8","nodeType":"VariableDeclaration","scope":2255,"src":"584:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"stakingRequirement","nameLocation":"631:18:8","nodeType":"VariableDeclaration","scope":2255,"src":"623:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"offerStatus","nameLocation":"666:11:8","nodeType":"VariableDeclaration","scope":2255,"src":"659:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Offer","nameLocation":"491:5:8","nodeType":"StructDefinition","scope":2590,"src":"484:200:8","visibility":"public"},{"anonymous":false,"id":2265,"name":"CommunityCreated","nameLocation":"696:16:8","nodeType":"EventDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"communityId","nameLocation":"729:11:8","nodeType":"VariableDeclaration","scope":2265,"src":"713:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2259,"indexed":false,"mutability":"mutable","name":"ipfsMetadata","nameLocation":"749:12:8","nodeType":"VariableDeclaration","scope":2265,"src":"742:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2258,"name":"string","nodeType":"ElementaryTypeName","src":"742:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":false,"mutability":"mutable","name":"stakingRequirement","nameLocation":"771:18:8","nodeType":"VariableDeclaration","scope":2265,"src":"763:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2263,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"807:5:8","nodeType":"VariableDeclaration","scope":2265,"src":"791:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"712:101:8"},"src":"690:124:8"},{"anonymous":false,"id":2271,"name":"MemberJoinedCommunity","nameLocation":"825:21:8","nodeType":"EventDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"indexed":true,"mutability":"mutable","name":"communityId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":2271,"src":"847:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"indexed":true,"mutability":"mutable","name":"member","nameLocation":"892:6:8","nodeType":"VariableDeclaration","scope":2271,"src":"876:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"846:53:8"},"src":"819:81:8"},{"anonymous":false,"id":2280,"name":"OfferCreated","nameLocation":"911:12:8","nodeType":"EventDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"indexed":true,"mutability":"mutable","name":"communityId","nameLocation":"940:11:8","nodeType":"VariableDeclaration","scope":2280,"src":"924:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"indexed":false,"mutability":"mutable","name":"offerId","nameLocation":"961:7:8","nodeType":"VariableDeclaration","scope":2280,"src":"953:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2278,"indexed":false,"mutability":"mutable","name":"newOffer","nameLocation":"976:8:8","nodeType":"VariableDeclaration","scope":2280,"src":"970:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer"},"typeName":{"id":2277,"nodeType":"UserDefinedTypeName","pathNode":{"id":2276,"name":"Offer","nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"970:5:8"},"referencedDeclaration":2255,"src":"970:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage_ptr","typeString":"struct PeerLocal.Offer"}},"visibility":"internal"}],"src":"923:62:8"},"src":"905:81:8"},{"anonymous":false,"id":2288,"name":"OfferAccepted","nameLocation":"997:13:8","nodeType":"EventDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"indexed":true,"mutability":"mutable","name":"communityId","nameLocation":"1027:11:8","nodeType":"VariableDeclaration","scope":2288,"src":"1011:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2284,"indexed":true,"mutability":"mutable","name":"offerId","nameLocation":"1056:7:8","nodeType":"VariableDeclaration","scope":2288,"src":"1040:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2286,"indexed":true,"mutability":"mutable","name":"member","nameLocation":"1081:6:8","nodeType":"VariableDeclaration","scope":2288,"src":"1065:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1010:78:8"},"src":"991:98:8"},{"anonymous":false,"id":2292,"name":"PeerLocalInitalized","nameLocation":"1100:19:8","nodeType":"EventDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"indexed":true,"mutability":"mutable","name":"erc20","nameLocation":"1136:5:8","nodeType":"VariableDeclaration","scope":2292,"src":"1120:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1119:23:8"},"src":"1094:49:8"},{"constant":false,"functionSelector":"fc0c546a","id":2295,"mutability":"mutable","name":"token","nameLocation":"1165:5:8","nodeType":"VariableDeclaration","scope":2590,"src":"1151:19:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":2294,"nodeType":"UserDefinedTypeName","pathNode":{"id":2293,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1151:6:8"},"referencedDeclaration":777,"src":"1151:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"e590b56a","id":2300,"mutability":"mutable","name":"communities","nameLocation":"1220:11:8","nodeType":"VariableDeclaration","scope":2590,"src":"1183:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community)"},"typeName":{"id":2299,"keyType":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1183:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community)"},"valueType":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"Community","nodeType":"IdentifierPath","referencedDeclaration":2242,"src":"1202:9:8"},"referencedDeclaration":2242,"src":"1202:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage_ptr","typeString":"struct PeerLocal.Community"}}},"visibility":"public"},{"constant":false,"id":2303,"mutability":"mutable","name":"communityCounter","nameLocation":"1245:16:8","nodeType":"VariableDeclaration","scope":2590,"src":"1237:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"offerCounter","nameLocation":"1279:12:8","nodeType":"VariableDeclaration","scope":2590,"src":"1271:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1294:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"functionSelector":"4d03a9a5","id":2313,"mutability":"mutable","name":"offers","nameLocation":"1393:6:8","nodeType":"VariableDeclaration","scope":2590,"src":"1340:59:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer))"},"typeName":{"id":2312,"keyType":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1340:45:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer))"},"valueType":{"id":2311,"keyType":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1359:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer)"},"valueType":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"Offer","nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"1378:5:8"},"referencedDeclaration":2255,"src":"1378:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage_ptr","typeString":"struct PeerLocal.Offer"}}}},"visibility":"public"},{"constant":false,"functionSelector":"54d00c04","id":2318,"mutability":"mutable","name":"communityMembers","nameLocation":"1443:16:8","nodeType":"VariableDeclaration","scope":2590,"src":"1406:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":2317,"keyType":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1406:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueType":{"baseType":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2316,"nodeType":"ArrayTypeName","src":"1425:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"b9f79451","id":2322,"mutability":"mutable","name":"reputation","nameLocation":"1500:10:8","nodeType":"VariableDeclaration","scope":2590,"src":"1465:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2321,"keyType":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"1473:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1465:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"d843b2c7","id":2326,"mutability":"mutable","name":"offerStatus","nameLocation":"1551:11:8","nodeType":"VariableDeclaration","scope":2590,"src":"1517:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2325,"keyType":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1517:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"1536:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"body":{"id":2343,"nodeType":"Block","src":"1597:82:8","statements":[{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1607:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2333,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"1615:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"src":"1607:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2335,"nodeType":"ExpressionStatement","src":"1607:14:8"},{"eventCall":{"arguments":[{"arguments":[{"id":2339,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"1664:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:8","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1656:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2336,"name":"PeerLocalInitalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"1636:19:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2342,"nodeType":"EmitStatement","src":"1631:41:8"}]},"id":2344,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"_token","nameLocation":"1589:6:8","nodeType":"VariableDeclaration","scope":2344,"src":"1582:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":2328,"nodeType":"UserDefinedTypeName","pathNode":{"id":2327,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1582:6:8"},"referencedDeclaration":777,"src":"1582:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1581:15:8"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[],"src":"1597:0:8"},"scope":2590,"src":"1570:109:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2375,"nodeType":"Block","src":"1773:274:8","statements":[{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2351,"name":"communities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1783:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community storage ref)"}},"id":2353,"indexExpression":{"id":2352,"name":"communityCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1795:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1783:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage","typeString":"struct PeerLocal.Community storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2355,"name":"ipfsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"1840:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2356,"name":"stakingRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1874:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1901:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1901:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"name":"Community","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1815:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Community_$2242_storage_ptr_$","typeString":"type(struct PeerLocal.Community storage pointer)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["ipfsMetadata","stakingRequirement","owner"],"nodeType":"FunctionCall","src":"1815:98:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_memory_ptr","typeString":"struct PeerLocal.Community memory"}},"src":"1783:130:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage","typeString":"struct PeerLocal.Community storage ref"}},"id":2361,"nodeType":"ExpressionStatement","src":"1783:130:8"},{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1923:18:8","subExpression":{"id":2362,"name":"communityCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1923:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"1923:18:8"},{"eventCall":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"communityCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1973:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1992:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1973:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2369,"name":"ipfsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"1995:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2370,"name":"stakingRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"2009:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2029:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2029:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2365,"name":"CommunityCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1956:16:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,string memory,uint256,address)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1956:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2374,"nodeType":"EmitStatement","src":"1951:89:8"}]},"functionSelector":"1173648e","id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"createCommunity","nameLocation":"1694:15:8","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"ipfsMetadata","nameLocation":"1724:12:8","nodeType":"VariableDeclaration","scope":2376,"src":"1710:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2345,"name":"string","nodeType":"ElementaryTypeName","src":"1710:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"stakingRequirement","nameLocation":"1746:18:8","nodeType":"VariableDeclaration","scope":2376,"src":"1738:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1709:56:8"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[],"src":"1773:0:8"},"scope":2590,"src":"1685:362:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2438,"nodeType":"Block","src":"2128:642:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2385,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"2224:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2384,"name":"_recoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"2209:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) view returns (address)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2209:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2387,"name":"communities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2238:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community storage ref)"}},"id":2389,"indexExpression":{"id":2388,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2250:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2238:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage","typeString":"struct PeerLocal.Community storage ref"}},"id":2390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2241,"src":"2238:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2209:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2270:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":2383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2201:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2201:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"2201:89:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2324:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2324:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2396,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2308:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"2308:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":2401,"name":"communities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2339:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community storage ref)"}},"id":2403,"indexExpression":{"id":2402,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2351:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2339:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage","typeString":"struct PeerLocal.Community storage ref"}},"id":2404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingRequirement","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2339:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2308:74:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520746f206a6f696e20636f6d6d756e697479","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2384:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d2c18c8d9b4ede2b7494234da9229eb7ba07046b7ece71f1a096d6e6ec690a0","typeString":"literal_string \"Insufficient balance to join community\""},"value":"Insufficient balance to join community"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d2c18c8d9b4ede2b7494234da9229eb7ba07046b7ece71f1a096d6e6ec690a0","typeString":"literal_string \"Insufficient balance to join community\""}],"id":2395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2300:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2300:125:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2408,"nodeType":"ExpressionStatement","src":"2300:125:8"},{"expression":{"arguments":[{"expression":{"id":2412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2507:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2507:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2416,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2527:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_PeerLocal_$2590","typeString":"contract PeerLocal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PeerLocal_$2590","typeString":"contract PeerLocal"}],"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2519:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:8","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2519:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2418,"name":"communities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2534:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Community_$2242_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Community storage ref)"}},"id":2420,"indexExpression":{"id":2419,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2546:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2534:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Community_$2242_storage","typeString":"struct PeerLocal.Community storage ref"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingRequirement","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2534:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2409,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2488:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":776,"src":"2488:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2488:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2423,"nodeType":"ExpressionStatement","src":"2488:90:8"},{"expression":{"arguments":[{"expression":{"id":2428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2669:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2669:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2424,"name":"communityMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2634:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":2426,"indexExpression":{"id":2425,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2651:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2634:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2634:34:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2634:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"ExpressionStatement","src":"2634:46:8"},{"eventCall":{"arguments":[{"id":2433,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2739:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2752:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2752:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2432,"name":"MemberJoinedCommunity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2717:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"EmitStatement","src":"2712:51:8"}]},"functionSelector":"61c6a009","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"joinCommunity","nameLocation":"2062:13:8","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"communityId","nameLocation":"2084:11:8","nodeType":"VariableDeclaration","scope":2439,"src":"2076:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"signature","nameLocation":"2110:9:8","nodeType":"VariableDeclaration","scope":2439,"src":"2097:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2097:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2075:45:8"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"2128:0:8"},"scope":2590,"src":"2053:717:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2491,"nodeType":"Block","src":"2908:506:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2451,"name":"reputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2926:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2454,"indexExpression":{"expression":{"id":2452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2937:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2937:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2455,"name":"reputationRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2952:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742072657075746174696f6e20746f20637265617465206f66666572","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2975:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_21124084ef3d586975a28cfe84da4c0bb5b35d4ce80f77028e33387f5b7115d7","typeString":"literal_string \"Insufficient reputation to create offer\""},"value":"Insufficient reputation to create offer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21124084ef3d586975a28cfe84da4c0bb5b35d4ce80f77028e33387f5b7115d7","typeString":"literal_string \"Insufficient reputation to create offer\""}],"id":2450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2918:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2918:99:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"2918:99:8"},{"expression":{"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"offerCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3077:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3093:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"nodeType":"ExpressionStatement","src":"3077:17:8"},{"assignments":[2466],"declarations":[{"constant":false,"id":2466,"mutability":"mutable","name":"newOffer","nameLocation":"3118:8:8","nodeType":"VariableDeclaration","scope":2491,"src":"3105:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer"},"typeName":{"id":2465,"nodeType":"UserDefinedTypeName","pathNode":{"id":2464,"name":"Offer","nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"3105:5:8"},"referencedDeclaration":2255,"src":"3105:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage_ptr","typeString":"struct PeerLocal.Offer"}},"visibility":"internal"}],"id":2476,"initialValue":{"arguments":[{"expression":{"id":2468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3135:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3135:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2470,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"3147:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2471,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"3160:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2472,"name":"reputationRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3170:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2473,"name":"stakingRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3193:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"63726561746564","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3213:9:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_76253669260cf524e3db8d89857f289f85025242f93be69d3ee9d28478803768","typeString":"literal_string \"created\""},"value":"created"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_76253669260cf524e3db8d89857f289f85025242f93be69d3ee9d28478803768","typeString":"literal_string \"created\""}],"id":2467,"name":"Offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3129:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Offer_$2255_storage_ptr_$","typeString":"type(struct PeerLocal.Offer storage pointer)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3129:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer memory"}},"nodeType":"VariableDeclarationStatement","src":"3105:118:8"},{"expression":{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2477,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3234:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2480,"indexExpression":{"id":2478,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"3241:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3234:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2481,"indexExpression":{"id":2479,"name":"offerCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3254:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3234:33:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2482,"name":"newOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"3270:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer memory"}},"src":"3234:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2484,"nodeType":"ExpressionStatement","src":"3234:44:8"},{"eventCall":{"arguments":[{"id":2486,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"3371:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2487,"name":"offerCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3384:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2488,"name":"newOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"3398:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Offer_$2255_memory_ptr","typeString":"struct PeerLocal.Offer memory"}],"id":2485,"name":"OfferCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3358:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Offer_$2255_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,struct PeerLocal.Offer memory)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3358:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"EmitStatement","src":"3353:54:8"}]},"functionSelector":"7ee98009","id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"createOffer","nameLocation":"2785:11:8","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"communityId","nameLocation":"2805:11:8","nodeType":"VariableDeclaration","scope":2492,"src":"2797:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2797:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"metadata","nameLocation":"2832:8:8","nodeType":"VariableDeclaration","scope":2492,"src":"2818:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2442,"name":"string","nodeType":"ElementaryTypeName","src":"2818:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"reputationRequirement","nameLocation":"2850:21:8","nodeType":"VariableDeclaration","scope":2492,"src":"2842:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"stakingRequirement","nameLocation":"2881:18:8","nodeType":"VariableDeclaration","scope":2492,"src":"2873:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2796:104:8"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"2908:0:8"},"scope":2590,"src":"2776:638:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2571,"nodeType":"Block","src":"3486:663:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2502,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3520:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3520:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2500,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"3504:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3504:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2505,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3535:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2507,"indexExpression":{"id":2506,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3542:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3535:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2509,"indexExpression":{"id":2508,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3535:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingRequirement","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"3535:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3504:78:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520746f20616363657074206f66666572","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_034578b2797419c4dfcd35fce48f37989b44fb6589f57ae872eb2a56f8598ec2","typeString":"literal_string \"Insufficient balance to accept offer\""},"value":"Insufficient balance to accept offer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_034578b2797419c4dfcd35fce48f37989b44fb6589f57ae872eb2a56f8598ec2","typeString":"literal_string \"Insufficient balance to accept offer\""}],"id":2499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3496:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3496:127:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2514,"nodeType":"ExpressionStatement","src":"3496:127:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2516,"name":"reputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"3641:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2519,"indexExpression":{"expression":{"id":2517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3652:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3652:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3641:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2520,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3667:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2522,"indexExpression":{"id":2521,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3674:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3667:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2524,"indexExpression":{"id":2523,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3667:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reputationRequirement","nodeType":"MemberAccess","referencedDeclaration":2250,"src":"3667:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3641:76:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742072657075746174696f6e20746f20616363657074206f66666572","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_76ec06ce19f7eea9b74f67bdeb9633604cabab1f2f8fe07da87c1681f18bda5e","typeString":"literal_string \"Insufficient reputation to accept offer\""},"value":"Insufficient reputation to accept offer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76ec06ce19f7eea9b74f67bdeb9633604cabab1f2f8fe07da87c1681f18bda5e","typeString":"literal_string \"Insufficient reputation to accept offer\""}],"id":2515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3633:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:128:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"3633:128:8"},{"expression":{"arguments":[{"expression":{"id":2533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3825:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3825:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2537,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3845:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_PeerLocal_$2590","typeString":"contract PeerLocal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PeerLocal_$2590","typeString":"contract PeerLocal"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:8","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"baseExpression":{"id":2539,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3852:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2541,"indexExpression":{"id":2540,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3859:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3852:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2543,"indexExpression":{"id":2542,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3872:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3852:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingRequirement","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"3852:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2530,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3806:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":776,"src":"3806:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"nodeType":"ExpressionStatement","src":"3806:94:8"},{"expression":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":2550,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3974:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2552,"indexExpression":{"id":2551,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3981:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3974:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2554,"indexExpression":{"id":2553,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3974:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"3974:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"baseExpression":{"id":2556,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4010:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer storage ref))"}},"id":2558,"indexExpression":{"id":2557,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"4017:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4010:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Offer_$2255_storage_$","typeString":"mapping(uint256 => struct PeerLocal.Offer storage ref)"}},"id":2560,"indexExpression":{"id":2559,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"4030:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4010:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2255_storage","typeString":"struct PeerLocal.Offer storage ref"}},"id":2561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingRequirement","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"4010:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3959:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":744,"src":"3959:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3959:99:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"ExpressionStatement","src":"3959:99:8"},{"eventCall":{"arguments":[{"id":2565,"name":"communityId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"4109:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2566,"name":"offerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"4122:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4131:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4131:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2564,"name":"OfferAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4095:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4095:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"EmitStatement","src":"4090:52:8"}]},"functionSelector":"81257bd5","id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOffer","nameLocation":"3429:11:8","nodeType":"FunctionDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"communityId","nameLocation":"3449:11:8","nodeType":"VariableDeclaration","scope":2572,"src":"3441:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"offerId","nameLocation":"3470:7:8","nodeType":"VariableDeclaration","scope":2572,"src":"3462:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3440:38:8"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[],"src":"3486:0:8"},"scope":2590,"src":"3420:729:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2588,"nodeType":"Block","src":"4248:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2583,"name":"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4308:38:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2581,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4279:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1360_$","typeString":"type(library ECDSA)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"4279:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4279:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2585,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"4349:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2579,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4265:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1360_$","typeString":"type(library ECDSA)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"4265:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4265:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2578,"id":2587,"nodeType":"Return","src":"4258:101:8"}]},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"_recoverSigner","nameLocation":"4164:14:8","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"signature","nameLocation":"4201:9:8","nodeType":"VariableDeclaration","scope":2589,"src":"4188:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2573,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4178:38:8"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"4239:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2576,"name":"address","nodeType":"ElementaryTypeName","src":"4239:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4238:9:8"},"scope":2590,"src":"4155:211:8","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":2591,"src":"239:4202:8","usedErrors":[]}],"src":"32:4410:8"}},"contracts/ReputationToken.sol":{"id":9,"ast":{"absolutePath":"contracts/ReputationToken.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"ReputationToken":[2615]},"id":2616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2592,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2616,"sourceUnit":700,"src":"65:55:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2594,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"150:5:9"},"id":2595,"nodeType":"InheritanceSpecifier","src":"150:5:9"}],"canonicalName":"ReputationToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2615,"linearizedBaseContracts":[2615,699,802,777,824],"name":"ReputationToken","nameLocation":"131:15:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2613,"nodeType":"Block","src":"208:60:9","statements":[{"expression":{"arguments":[{"expression":{"id":2603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"224:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"224:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"236:7:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"246:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2607,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"250:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"250:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"246:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"236:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2602,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"218:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"218:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2612,"nodeType":"ExpressionStatement","src":"218:43:9"}]},"id":2614,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"52657075746174696f6e546f6b656e","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"182:17:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_32c0acb97d993e7f678545eccaee6dfb0bdcf32d669674c1f2e79cee973427ed","typeString":"literal_string \"ReputationToken\""},"value":"ReputationToken"},{"hexValue":"525054","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"201:5:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_193fb9814d53cc9cda8187d0d39a8722345ce84f54c3c6acd15c420cb1471f43","typeString":"literal_string \"RPT\""},"value":"RPT"}],"id":2600,"kind":"baseConstructorSpecifier","modifierName":{"id":2597,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"176:5:9"},"nodeType":"ModifierInvocation","src":"176:31:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[],"src":"173:2:9"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[],"src":"208:0:9"},"scope":2615,"src":"162:106:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2616,"src":"122:148:9","usedErrors":[]}],"src":"32:239:9"}},"contracts/TestErc20Token.sol":{"id":10,"ast":{"absolutePath":"contracts/TestErc20Token.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"TestERC20":[2653]},"id":2654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2617,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2654,"sourceUnit":700,"src":"65:55:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2619,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"144:5:10"},"id":2620,"nodeType":"InheritanceSpecifier","src":"144:5:10"}],"canonicalName":"TestERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2653,"linearizedBaseContracts":[2653,699,802,777,824],"name":"TestERC20","nameLocation":"131:9:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2638,"nodeType":"Block","src":"199:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":2628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"215:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"215:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:7:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2632,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"241:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"241:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"237:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"227:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2627,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"209:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"209:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"ExpressionStatement","src":"209:43:10"}]},"id":2639,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546573744572633230","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"176:11:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f7644a035d46177a27ba6a67aaf8b6da37392af644c0183b396f7fb7bce8dc5","typeString":"literal_string \"TestErc20\""},"value":"TestErc20"},{"hexValue":"544552433230","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"189:8:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d9bc5ee273504278d579afb7029f2176ae7726e366ea0b7d8cb78b1f60e0666","typeString":"literal_string \"TERC20\""},"value":"TERC20"}],"id":2625,"kind":"baseConstructorSpecifier","modifierName":{"id":2622,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"170:5:10"},"nodeType":"ModifierInvocation","src":"170:28:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"167:2:10"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"199:0:10"},"scope":2653,"src":"156:103:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2651,"nodeType":"Block","src":"314:34:10","statements":[{"expression":{"arguments":[{"id":2647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"330:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2648,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2646,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"324:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"324:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2650,"nodeType":"ExpressionStatement","src":"324:17:10"}]},"functionSelector":"40c10f19","id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"274:4:10","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"to","nameLocation":"287:2:10","nodeType":"VariableDeclaration","scope":2652,"src":"279:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"279:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"amount","nameLocation":"299:6:10","nodeType":"VariableDeclaration","scope":2652,"src":"291:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"278:28:10"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[],"src":"314:0:10"},"scope":2653,"src":"265:83:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2654,"src":"122:228:10","usedErrors":[]}],"src":"32:319:10"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":128,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2490, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2477, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2477:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2490:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_699\" {\n    code {\n        {\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_699\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2042:2055  \"_name = name_\" */ 0x03)), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20_699_deployed\")\n            codecopy(_5, dataoffset(\"ERC20_699_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(0, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_699_deployed\" {\n        code {\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2477()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4048() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2477() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4048()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2490(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2491(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var_ := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(_1, var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2491(var_to)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220b71622fcee6fe2b8c00e2ffb64299f4f7d3381b23245b68d049a58aa61665da86c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"01000209e8c678f8051697ae94505c0cc6f792f7d1459a0bce4ce631ceefd2cb","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000c01b1ab03aa02359409eb931905f07fc2d00212cefd061207ec012eea888cb0b"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 5:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_999\" {\n    code {\n        {\n            /// @src 5:188:2253  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_999_deployed\")\n            codecopy(_1, dataoffset(\"Strings_999_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_999_deployed\" {\n        code {\n            {\n                /// @src 5:188:2253  \"library Strings {...\"\n                mstore(64, memoryguard(0x80))\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122017e8282d1c3718ec6a17f15a8271074dc97fbbf2318f8b8b162303de02920cfd6c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"01000007d503657196d2e90a46f80e8067b7fc80812551ad02c0173043cbabab","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000c3df9794cc6c275277f3eed1b3e47c9513f59367e5e732a0605073f60e42006d"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 6:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_1360\" {\n    code {\n        {\n            /// @src 6:369:8537  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_1360_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_1360_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 6:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_1360_deployed\" {\n        code {\n            {\n                /// @src 6:369:8537  \"library ECDSA {...\"\n                mstore(64, memoryguard(0x80))\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220d7d4e89dda250f09dbf2fbf0b39e334de2f0e2600412f4a949c767ab12b9a3536c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"0100000729d8225f4e8c79c97e6455f9e5115ee6bcdcd05c0fa6f1b3fcb03b12","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e0000001200010430000000000000000000000002000000000000000000000000000000400000010000000000000000000111d718a0185e08df1b3724602c34abd025422659e2378b407ffe6fe983722f"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 7:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_2225\" {\n    code {\n        {\n            /// @src 7:202:12504  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_2225_deployed\")\n            codecopy(_1, dataoffset(\"Math_2225_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_2225_deployed\" {\n        code {\n            {\n                /// @src 7:202:12504  \"library Math {...\"\n                mstore(64, memoryguard(0x80))\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220cf556691b5c8daac009bc666b1ae2aa5f391bafad6d251aa1773b5ae1b3d4a716c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"01000007aa7a78a1733ba89445c4e4bd88de9293ff7829dd6b83819d16306c34","factoryDependencies":{}}},"contracts/PeerLocal.sol":{"PeerLocal":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"communityId","type":"uint256"},{"indexed":false,"internalType":"string","name":"ipfsMetadata","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakingRequirement","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"CommunityCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"communityId","type":"uint256"},{"indexed":true,"internalType":"address","name":"member","type":"address"}],"name":"MemberJoinedCommunity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"communityId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"offerId","type":"uint256"},{"indexed":true,"internalType":"address","name":"member","type":"address"}],"name":"OfferAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"communityId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"offerId","type":"uint256"},{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"communityId","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"reputationRequirement","type":"uint256"},{"internalType":"uint256","name":"stakingRequirement","type":"uint256"},{"internalType":"string","name":"offerStatus","type":"string"}],"indexed":false,"internalType":"struct PeerLocal.Offer","name":"newOffer","type":"tuple"}],"name":"OfferCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"erc20","type":"address"}],"name":"PeerLocalInitalized","type":"event"},{"inputs":[{"internalType":"uint256","name":"communityId","type":"uint256"},{"internalType":"uint256","name":"offerId","type":"uint256"}],"name":"acceptOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"communities","outputs":[{"internalType":"string","name":"ipfsMetadata","type":"string"},{"internalType":"uint256","name":"stakingRequirement","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"communityMembers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"ipfsMetadata","type":"string"},{"internalType":"uint256","name":"stakingRequirement","type":"uint256"}],"name":"createCommunity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"communityId","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"reputationRequirement","type":"uint256"},{"internalType":"uint256","name":"stakingRequirement","type":"uint256"}],"name":"createOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"communityId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"joinCommunity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"offerStatus","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"offers","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"communityId","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"reputationRequirement","type":"uint256"},{"internalType":"uint256","name":"stakingRequirement","type":"uint256"},{"internalType":"string","name":"offerStatus","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reputation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsMetadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CommunityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberJoinedCommunity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"OfferAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reputationRequirement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerStatus\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct PeerLocal.Offer\",\"name\":\"newOffer\",\"type\":\"tuple\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"PeerLocalInitalized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communities\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityMembers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfsMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"}],\"name\":\"createCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reputationRequirement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"}],\"name\":\"createOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"joinCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offerStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reputationRequirement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerStatus\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PeerLocal.sol\":\"PeerLocal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/PeerLocal.sol\":{\"keccak256\":\"0x9195ffba31e860f678b58483e72fc1ade5887a7b5f4349daecd7675c8dc7a4d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358c34d0ef4cea5ec16435e656a8fe9b0d586918917be0221d64e1736540200e\",\"dweb:/ipfs/QmPToADL8ShEGi8i8NyBxfrSW2XHJZBKnDo1FVE3bAZAtQ\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2235,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER","offset":0,"slot":"1","type":"t_bytes32"},{"astId":2295,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"token","offset":0,"slot":"2","type":"t_contract(IERC20)777"},{"astId":2300,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"communities","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Community)2242_storage)"},{"astId":2303,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"communityCounter","offset":0,"slot":"4","type":"t_uint256"},{"astId":2306,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"offerCounter","offset":0,"slot":"5","type":"t_uint256"},{"astId":2313,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"offers","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Offer)2255_storage))"},{"astId":2318,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"communityMembers","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},{"astId":2322,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"reputation","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":2326,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"offerStatus","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IERC20)777":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Offer)2255_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct PeerLocal.Offer))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Offer)2255_storage)"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(Community)2242_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PeerLocal.Community)","numberOfBytes":"32","value":"t_struct(Community)2242_storage"},"t_mapping(t_uint256,t_struct(Offer)2255_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PeerLocal.Offer)","numberOfBytes":"32","value":"t_struct(Offer)2255_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Community)2242_storage":{"encoding":"inplace","label":"struct PeerLocal.Community","members":[{"astId":2237,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"ipfsMetadata","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2239,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"stakingRequirement","offset":0,"slot":"1","type":"t_uint256"},{"astId":2241,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"owner","offset":0,"slot":"2","type":"t_address"}],"numberOfBytes":"96"},"t_struct(Offer)2255_storage":{"encoding":"inplace","label":"struct PeerLocal.Offer","members":[{"astId":2244,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2246,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"communityId","offset":0,"slot":"1","type":"t_uint256"},{"astId":2248,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"metadata","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2250,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"reputationRequirement","offset":0,"slot":"3","type":"t_uint256"},{"astId":2252,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"stakingRequirement","offset":0,"slot":"4","type":"t_uint256"},{"astId":2254,"contract":"contracts/PeerLocal.sol:PeerLocal","label":"offerStatus","offset":0,"slot":"5","type":"t_string_storage"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PeerLocal.sol:PeerLocal\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.le\t@.BB0_22\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_28\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_50\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @getter_fun_communities, @DEFAULT_UNWIND\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n\tadd\tr3, r0, r6\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr4, r0, r2\n\tadd\tr5, r0, r3\n\tadd\tr6, r0, r4\n\tnear_call\tr0, @abi_encode_string_uint256_address, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_61\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_61:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @constructor_PeerLocal, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_communityMembers, @DEFAULT_UNWIND\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_43\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_reputation, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_36\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_38\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_stringt_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_createOffer, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_28:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_50:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @getter_fun_offerStatus, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_30:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_stringt_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_createCommunity, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_acceptOffer, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_joinCommunity, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_74, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_offers, @DEFAULT_UNWIND\n\tadd\tr1, r0, r7\n\tadd\tr2, r0, r8\n\tadd\tr3, r0, r9\n\tadd\tr4, r0, r10\n\tadd\tr5, r0, r11\n\tadd\tr6, r0, r12\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr7, r0, r2\n\tadd\tr8, r0, r3\n\tadd\tr9, r0, r4\n\tadd\tr10, r0, r5\n\tadd\tr11, r0, r6\n\tadd\tr12, r0, r7\n\tnear_call\tr0, @abi_encode_address_uint256_string_uint256_uint256_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_40\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_40:\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nconstructor_PeerLocal:\n.func_begin1:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI1_0[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tsstore\tr0, r2\n\tld.1\t64, r2\n\tadd\t@CPI1_1[0], r0, r3\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_1[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI1_1[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r3\n\tshl.s\t192, r4, r2\n\tand\t@CPI1_2[0], r1, r5\n\tadd\tr3, r0, stack-[1]\n\tor\tr2, r3, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_1\n\tadd\t@CPI1_5[0], r0, r1\n\tadd\t1, r0, r2\n\tsstore\tr2, r1\n\tadd\t4, r0, r1\n\tsstore\tr1, r0\n\tadd\t5, r0, r1\n\tsstore\tr1, r0\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI1_2[0], r1, r5\n\tadd\t2, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI1_0[0], r1, r1\n\tor\tr1, r5, r1\n\tsstore\tr3, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[1], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI1_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_stringt_uint256:\n.func_begin2:\n\tadd\tr1, r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI2_0[0], r0, r3\n\tsub.s!\t63, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI2_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_1[0], r4, r3\n\tjump.gt\t@.BB2_1\n\tadd\t35, r4, r3\n\tadd\t@CPI2_0[0], r0, r5\n\tsub!\tr3, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_0[0], r2, r7\n\tand\t@CPI2_0[0], r3, r3\n\tsub!\tr3, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI2_0[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_1\n\tadd\t4, r4, r3\n\tptr.add\tr1, r3, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI2_2[0], r3, r1\n\tjump.ge\t@.BB2_5\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI2_1[0], r5, r7\n\tjump.gt\t@.BB2_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_5\n\tadd\t36, r4, r6\n\tst.1\t64, r5\n\tst.1.inc\tr1, r3, r4\n\tadd\tr3, r6, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB2_1\n\tand\t31, r3, r2\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB2_14\n\tadd\tr0, r0, r7\n.BB2_11:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_11\n.BB2_14:\n\tsub.s!\t0, r2, r7\n\tjump.eq\t@.BB2_13\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r6\n\tshl.s\t3, r2, r2\n\tld.1\tr6, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r7, r2\n\tst.1\tr6, r2\n.BB2_13:\n\tadd\tr4, r3, r2\n\tst.1\tr2, r0\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_5:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_decode_uint256t_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ngetter_fun_offers:\n.func_begin4:\n\tnop\tstack+=[9]\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r10\n\tadd\t2, r10, r1\n\tsload\tr1, r8\n\tand!\t1, r8, r6\n\tshr.s\t1, r8, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tld.1\t64, r3\n\tsload\tr10, r7\n\tadd\t1, r10, r4\n\tsload\tr4, r2\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr6, r4, r4\n\tjump.ne\t@.BB4_4\n\tst.1.inc\tr3, r5, r9\n\tsub.s!\t0, r6, r4\n\tadd\tr3, r0, stack-[9]\n\tadd\tr7, r0, stack-[8]\n\tadd\tr2, r0, stack-[7]\n\tjump.eq\t@.BB4_9\n\tadd\tr9, r0, stack-[4]\n\tadd\tr5, r0, stack-[5]\n\tadd\tr10, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tadd\tstack-[5], r0, r8\n\tsub.s!\t0, r8, r2\n\tjump.eq\t@.BB4_12\n\tld\tr1, r6\n\tadd\tr0, r0, r1\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r10\n\tadd\tstack-[4], r0, r9\n.BB4_14:\n\tadd\tr1, r9, r5\n\tsload\tr6, r4\n\tst.1\tr5, r4\n\tadd\t1, r6, r6\n\tadd\t32, r1, r1\n\tsub!\tr1, r8, r4\n\tjump.lt\t@.BB4_14\n\tjump\t@.BB4_15\n.BB4_9:\n\tsub.s\t256, r0, r1\n\tand\tr8, r1, r1\n\tst.1\tr9, r1\n\tadd\t64, r3, r1\n\tjump\t@.BB4_6\n.BB4_12:\n\tadd\tr0, r0, r1\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r10\n\tadd\tstack-[4], r0, r9\n.BB4_15:\n\tadd\tr1, r9, r1\n.BB4_6:\n\tsub\tr1, r3, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r11\n\tand\tr1, r11, r1\n\tadd\tr1, r3, r6\n\tsub!\tr6, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI4_3[0], r6, r4\n\tjump.gt\t@.BB4_8\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB4_8\n\tst.1\t64, r6\n\tadd\t5, r10, r1\n\tsload\tr1, r8\n\tand!\t1, r8, r9\n\tshr.s\t1, r8, r4\n\tand\t127, r4, r5\n\tadd\tr4, r0, r13\n\tadd.eq\tr5, r0, r13\n\tsub.s!\t31, r13, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr8, r4, r12\n\tadd\t4, r10, r5\n\tsload\tr5, r5\n\tadd\t3, r10, r10\n\tsload\tr10, r4\n\tand!\t1, r12, r10\n\tjump.ne\t@.BB4_4\n\tst.1.inc\tr6, r13, r10\n\tsub.s!\t0, r9, r9\n\tjump.eq\t@.BB4_20\n\tadd\tr10, r0, stack-[1]\n\tadd\tr13, r0, stack-[2]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr11, r0, stack-[5]\n\tadd\tr6, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tadd\tstack-[2], r0, r12\n\tsub.s!\t0, r12, r2\n\tjump.eq\t@.BB4_23\n\tld\tr1, r8\n\tadd\tr0, r0, r1\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r4\n\tadd\tstack-[1], r0, r13\n.BB4_25:\n\tadd\tr1, r13, r9\n\tsload\tr8, r10\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tadd\t32, r1, r1\n\tsub!\tr1, r12, r9\n\tjump.lt\t@.BB4_25\n\tjump\t@.BB4_26\n.BB4_20:\n\tsub.s\t256, r0, r1\n\tand\tr8, r1, r1\n\tst.1\tr10, r1\n\tadd\t64, r6, r1\n\tjump\t@.BB4_18\n.BB4_23:\n\tadd\tr0, r0, r1\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r4\n\tadd\tstack-[1], r0, r13\n.BB4_26:\n\tadd\tr1, r13, r1\n.BB4_18:\n\tsub\tr1, r6, r1\n\tadd\t31, r1, r1\n\tand\tr1, r11, r8\n\tadd\tr8, r6, r1\n\tsub!\tr1, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI4_3[0], r1, r9\n\tjump.gt\t@.BB4_8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB4_8\n\tst.1\t64, r1\n\tand\t@CPI4_4[0], r7, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_4:\n\tadd\t@CPI4_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_8:\n\tadd\t@CPI4_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_address_uint256_string_uint256_uint256_string:\n.func_begin5:\n\tadd\t64, r1, r8\n\tadd\t192, r0, r9\n\tst.1\tr8, r9\n\tadd\t32, r1, r8\n\tst.1\tr8, r3\n\tand\t@CPI5_0[0], r2, r2\n\tst.1\tr1, r2\n\tld.1\tr4, r2\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\t224, r1, r3\n\tsub.s!\t0, r2, r8\n\tjump.eq\t@.BB5_5\n\tadd\tr0, r0, r8\n.BB5_2:\n\tadd\tr8, r3, r9\n\tadd\t32, r8, r8\n\tadd\tr8, r4, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tsub!\tr8, r2, r9\n\tjump.lt\t@.BB5_2\n\tsub!\tr8, r2, r4\n\tjump.le\t@.BB5_5\n\tadd\tr2, r3, r4\n\tst.1\tr4, r0\n.BB5_5:\n\tadd\t128, r1, r4\n\tst.1\tr4, r6\n\tadd\t96, r1, r4\n\tst.1\tr4, r5\n\tadd\t31, r2, r4\n\tsub.s\t32, r0, r2\n\tand\tr4, r2, r4\n\tadd\tr3, r4, r4\n\tsub\tr4, r1, r3\n\tadd\t160, r1, r1\n\tst.1\tr1, r3\n\tld.1\tr7, r3\n\tst.1.inc\tr4, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB5_10\n\tadd\tr0, r0, r4\n.BB5_7:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB5_7\n\tsub!\tr4, r3, r4\n\tjump.le\t@.BB5_10\n\tadd\tr3, r1, r4\n\tst.1\tr4, r0\n.BB5_10:\n\tadd\t31, r3, r3\n\tand\tr3, r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end5:\n\ngetter_fun_communityMembers:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB6_1\n\tst.1\t0, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr1, r2, r1\n\tsload\tr1, r1\n\tand\t@CPI6_3[0], r1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_uint256t_bytes:\n.func_begin7:\n\tadd\tr1, r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI7_1[0], r5, r4\n\tjump.gt\t@.BB7_1\n\tadd\t35, r5, r4\n\tadd\t@CPI7_0[0], r0, r6\n\tsub!\tr4, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI7_0[0], r3, r8\n\tand\t@CPI7_0[0], r4, r4\n\tsub!\tr4, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr4, r8, r4\n\tsub.s!\t@CPI7_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB7_1\n\tadd\t4, r5, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI7_2[0], r4, r2\n\tjump.ge\t@.BB7_5\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r6\n\tand\tr2, r6, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI7_1[0], r6, r8\n\tjump.gt\t@.BB7_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB7_5\n\tadd\t36, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr2, r4, r5\n\tadd\tr4, r7, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB7_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB7_14\n\tadd\tr0, r0, r8\n.BB7_11:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB7_11\n.BB7_14:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB7_13\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB7_13:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_5:\n\tadd\t@CPI7_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_uint256t_stringt_uint256t_uint256:\n.func_begin8:\n\tadd\tr1, r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t127, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI8_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI8_1[0], r5, r1\n\tjump.gt\t@.BB8_1\n\tadd\t35, r5, r1\n\tadd\t@CPI8_0[0], r0, r4\n\tsub!\tr1, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI8_0[0], r3, r7\n\tand\t@CPI8_0[0], r1, r1\n\tsub!\tr1, r7, r8\n\tadd.ge\t0, r0, r4\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd.ne\tr6, r0, r4\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB8_1\n\tadd\t4, r5, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI8_2[0], r4, r2\n\tjump.ge\t@.BB8_5\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r6\n\tand\tr2, r6, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI8_1[0], r6, r8\n\tjump.gt\t@.BB8_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB8_5\n\tadd\t36, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr2, r4, r5\n\tadd\tr4, r7, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB8_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB8_14\n\tadd\tr0, r0, r8\n.BB8_11:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB8_11\n.BB8_14:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB8_13\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB8_13:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tptr.add.s\t100, r4, r4\n\tld\tr4, r4\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tadd\t@CPI8_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_address:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\ngetter_fun_reputation:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\ngetter_fun_offerStatus:\n.func_begin11:\n\tnop\tstack+=[3]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r6\n\tsload\tr6, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB11_3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r5, r4\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB11_8\n\tadd\tr5, r0, stack-[1]\n\tadd\tr4, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r6\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tadd\tstack-[1], r0, r6\n\tsub.s!\t0, r6, r2\n\tjump.eq\t@.BB11_11\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB11_13:\n\tadd\tr1, r5, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB11_13\n\tjump\t@.BB11_14\n.BB11_8:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\tr4, r2\n\tadd\t64, r1, r2\n\tjump\t@.BB11_5\n.BB11_11:\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB11_14:\n\tadd\tr1, r5, r2\n\tadd\tstack-[3], r0, r1\n.BB11_5:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r2\n\tand\tr3, r2, r2\n\tadd\tr2, r1, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI11_3[0], r4, r3\n\tjump.gt\t@.BB11_7\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_7\n\tst.1\t64, r4\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tadd\t@CPI11_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_7:\n\tadd\t@CPI11_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nabi_encode_string:\n.func_begin12:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB12_5\n\tadd\tr0, r0, r4\n.BB12_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB12_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB12_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB12_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end12:\n\ngetter_fun_communities:\n.func_begin13:\n\tnop\tstack+=[4]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r5\n\tsload\tr5, r6\n\tand!\t1, r6, r2\n\tshr.s\t1, r6, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB13_3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r4, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB13_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tst.1\t0, r5\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[1], r0, r7\n\tsub.s!\t0, r7, r2\n\tjump.eq\t@.BB13_11\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[2], r0, r6\n.BB13_13:\n\tadd\tr1, r6, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB13_13\n\tjump\t@.BB13_14\n.BB13_8:\n\tsub.s\t256, r0, r2\n\tand\tr6, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tjump\t@.BB13_5\n.BB13_11:\n\tadd\tr0, r0, r1\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[2], r0, r6\n.BB13_14:\n\tadd\tr1, r6, r2\n\tadd\tstack-[3], r0, r1\n.BB13_5:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r2\n\tand\tr3, r2, r2\n\tadd\tr2, r1, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI13_3[0], r4, r3\n\tjump.gt\t@.BB13_7\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_7\n\tst.1\t64, r4\n\tadd\t1, r5, r2\n\tsload\tr2, r2\n\tadd\t2, r5, r3\n\tsload\tr3, r3\n\tand\t@CPI13_4[0], r3, r3\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nabi_encode_string_uint256_address:\n.func_begin14:\n\tadd\t96, r0, r5\n\tst.1.inc\tr1, r5, r7\n\tld.1\tr2, r5\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t128, r1, r6\n\tsub.s!\t0, r5, r8\n\tjump.eq\t@.BB14_5\n\tadd\tr0, r0, r8\n.BB14_2:\n\tadd\tr8, r6, r9\n\tadd\t32, r8, r8\n\tadd\tr8, r2, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB14_2\n\tsub!\tr8, r5, r2\n\tjump.le\t@.BB14_5\n\tadd\tr5, r6, r2\n\tst.1\tr2, r0\n.BB14_5:\n\tand\t@CPI14_0[0], r4, r2\n\tadd\t64, r1, r1\n\tst.1\tr1, r2\n\tst.1\tr7, r3\n\tadd\t31, r5, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\tr6, r1, r1\n\tret\n.func_end14:\n\nmodifier_onlyOwner:\n.func_begin15:\n\tsload\tr0, r1\n\tand\t@CPI15_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB15_1\n\tand\t@CPI15_5[0], r1, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI15_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_3\n\tret\n.BB15_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI15_3[0], r0, r2\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nmodifier_onlyOwner_74:\n.func_begin16:\n\tadd\tr1, r0, r6\n\tsload\tr0, r1\n\tand\t@CPI16_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB16_1\n\tand!\t@CPI16_0[0], r6, r2\n\tjump.eq\t@.BB16_3\n\tand\t@CPI16_5[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI16_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_5\n\tret\n.BB16_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI16_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_createCommunity:\n.func_begin17:\n\tnop\tstack+=[11]\n\tadd\tr2, r0, stack-[11]\n\tadd\tr1, r0, r2\n\tld.1\t64, r4\n\tsub.s!\t@CPI17_0[0], r4, r1\n\tjump.ge\t@.BB17_1\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\tstack-[11], r0, r1\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r1\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr4, r2\n\tadd\tr4, r0, stack-[9]\n\tadd\t64, r4, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tld\tr1, r4\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r6\n\tld.1.inc\tr6, r5, r7\n\tsub.s!\t@CPI17_3[0], r5, r1\n\tadd\tstack-[10], r0, r9\n\tjump.gt\t@.BB17_1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB17_6\n\tadd\tr6, r0, stack-[3]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[4]\n\tadd\tr5, r0, stack-[9]\n\tjump.lt\t@.BB17_12\n\tadd\tr3, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI17_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tadd\tstack-[9], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[10], r0, r9\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB17_12\n.BB17_11:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB17_11\n.BB17_12:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB17_29\n\tst.1\t0, r4\n\tadd\t@CPI17_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tsub.s\t32, r0, r2\n\tadd\tstack-[9], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB17_26\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB17_25:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB17_25\n.BB17_26:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[10], r0, r9\n\tjump.ge\t@.BB17_28\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB17_28:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[4], r0, r4\n\tjump\t@.BB17_13\n.BB17_29:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB17_13\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB17_13:\n\tsstore\tr4, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\t1, r4, r2\n\tsstore\tr2, r1\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI17_5[0], r1, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r3\n\tand\t@CPI17_6[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r3\n\tsload\tr3, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB17_14\n\tadd\t1, r1, r1\n\tsstore\tr3, r1\n\tsload\tr3, r4\n\tsub.s!\t0, r4, r1\n\tjump.eq\t@.BB17_14\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tld.1\tr9, r2\n\tadd\t64, r1, r5\n\tst.1\tr5, r2\n\tsub.s\t1, r4, r5\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB17_21\n\tadd\t96, r1, r4\n\tadd\tr0, r0, r6\n.BB17_18:\n\tadd\tr6, r4, r7\n\tadd\t32, r6, r6\n\tadd\tr6, r9, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB17_18\n\tsub!\tr6, r2, r6\n\tjump.le\t@.BB17_21\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n.BB17_21:\n\tadd\tstack-[11], r0, r4\n\tst.1\tr3, r4\n\tadd\t127, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI17_1[0], r0, r3\n\tsub.s!\t@CPI17_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI17_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_8[0], r0, r4\n\tadd\tstack-[5], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_3\n\tret\n.BB17_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_1:\n\tadd\t@CPI17_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_14:\n\tadd\t@CPI17_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tadd\t@CPI17_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_joinCommunity:\n.func_begin18:\n\tnop\tstack+=[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI18_0[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t60, r1, r4\n\tst.1\tr4, r3\n\tadd\t60, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tjump.ge\t@.BB18_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI18_2[0], r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI18_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r5\n\tld.1.inc\tr5, r3, r2\n\tsub.s!\t65, r3, r3\n\tjump.ne\t@.BB18_18\n\tadd\t64, r5, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI18_5[0], r3, r4\n\tjump.gt\t@.BB18_17\n\tadd\t96, r5, r4\n\tld.1\tr4, r4\n\tld.1\tr2, r2\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r3\n\tadd\t64, r5, r3\n\tst.1\tr3, r2\n\tshr.s\t248, r4, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tst.1\t0, r0\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI18_2[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_6[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB18_70\n\tadd\tr0, r0, r6\n.BB18_8:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB18_8\n.BB18_70:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB18_10\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB18_10:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_11\n\tld.1\t0, r1\n\tand!\t@CPI18_7[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB18_19\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI18_7[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB18_22\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t@CPI18_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tand\t@CPI18_7[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI18_7[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[4]\n\tjump.ne\t@.BB18_25\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_35\n.BB18_25:\n\tadd\t@CPI18_2[0], r0, r4\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI18_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_12[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_68\n\tadd\tr0, r0, r6\n.BB18_27:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_27\n.BB18_68:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_29\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_29:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_30\n.BB18_35:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_13[0], r1, r3\n\tjump.gt\t@.BB18_1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_1\n\tst.1\t64, r1\n\tadd\t@CPI18_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_14[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB18_40\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r9\n\tadd\t68, r9, r2\n\tst.1\tr2, r1\n\tcontext.this\tr1\n\tand\t@CPI18_7[0], r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI18_15[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_44\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_54\n.BB18_44:\n\tadd\t@CPI18_2[0], r0, r4\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI18_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_10[0], r1, r1\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_66\n\tadd\tr0, r0, r6\n.BB18_46:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_46\n.BB18_66:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_48\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_49\n.BB18_54:\n\tadd\t31, r3, r1\n\tadd\tstack-[2], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_13[0], r1, r3\n\tjump.gt\t@.BB18_1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_1\n\tst.1\t64, r1\n\tadd\t@CPI18_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_14[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB18_3\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI18_13[0], r3, r2\n\tjump.gt\t@.BB18_1\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB18_61\n\tst.1\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI18_18[0], r2, r2\n\tadd\tstack-[5], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI18_2[0], r0, r1\n\tld.1\t64, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_19[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_3\n\tret\n.BB18_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tadd\t@CPI18_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_18:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_17:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_520d, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_11:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_69\n\tadd\tr0, r0, r5\n.BB18_13:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_13\n.BB18_69:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_15\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_15:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_19:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_tuple_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_22:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_40:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_61:\n\tadd\t@CPI18_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_30:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_67\n\tadd\tr0, r0, r5\n.BB18_32:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_32\n.BB18_67:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_34\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_34:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_49:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_65\n\tadd\tr0, r0, r5\n.BB18_51:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_51\n.BB18_65:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_53\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_53:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_createOffer:\n.func_begin19:\n\tnop\tstack+=[15]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[12]\n\tadd\tr2, r0, stack-[11]\n\tadd\tr1, r0, stack-[14]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB19_3\n\tadd\t5, r0, r3\n\tsload\tr3, r1\n\tsub.s\t1, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB19_5\n\tadd\t1, r1, r1\n\tadd\tr3, r0, stack-[13]\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI19_2[0], r1, r1\n\tjump.ge\t@.BB19_7\n\tadd\tstack-[15], r0, r2\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tadd\t128, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r2, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\tr1, r4\n\tadd\t64, r2, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tand\t@CPI19_3[0], r1, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI19_4[0], r1, r2\n\tjump.gt\t@.BB19_7\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI19_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t7, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r2\n\tadd\t160, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI19_3[0], r2, r2\n\tld\tr1, r4\n\tsload\tr4, r1\n\tand\t@CPI19_6[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr4, r1\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\t1, r4, r2\n\tsstore\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r7\n\tld.1.inc\tr7, r6, r8\n\tsub.s!\t@CPI19_7[0], r6, r1\n\tjump.gt\t@.BB19_7\n\tadd\t2, r4, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB19_13\n\tadd\tr7, r0, stack-[3]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tadd\tr6, r0, stack-[4]\n\tjump.lt\t@.BB19_19\n\tadd\tr3, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r5\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[4], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB19_19\n.BB19_18:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB19_18\n.BB19_19:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB19_44\n\tst.1\t0, r5\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB19_41\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB19_40:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB19_40\n.BB19_41:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB19_43\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tadd\tstack-[7], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB19_43:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump\t@.BB19_20\n.BB19_44:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB19_20\n\tshl.s\t3, r6, r1\n\tadd\tstack-[7], r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr8, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB19_20:\n\tsstore\tr5, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\t3, r4, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\t4, r4, r2\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r6\n\tld.1.inc\tr6, r5, r7\n\tsub.s!\t@CPI19_7[0], r5, r1\n\tjump.gt\t@.BB19_7\n\tadd\t5, r4, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB19_13\n\tadd\tr6, r0, stack-[4]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tjump.lt\t@.BB19_27\n\tadd\tr3, r0, stack-[2]\n\tadd\tr7, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[5], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r7\n\tjump.ge\t@.BB19_27\n.BB19_26:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB19_26\n.BB19_27:\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB19_35\n\tst.1\t0, r4\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB19_32\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB19_31:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB19_31\n.BB19_32:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB19_34\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tadd\tstack-[7], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB19_34:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB19_46\n.BB19_35:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB19_46\n\tshl.s\t3, r5, r1\n\tadd\tstack-[7], r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB19_46:\n\tsstore\tr4, r1\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI19_3[0], r2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r4\n\tadd\t128, r1, r2\n\tadd\t192, r0, r3\n\tst.1\tr2, r3\n\tadd\t256, r1, r2\n\tld.1\tr4, r3\n\tst.1\tr2, r3\n\tadd\t288, r1, r2\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB19_51\n\tadd\tr0, r0, r5\n.BB19_48:\n\tadd\tr5, r2, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB19_48\n\tsub!\tr5, r3, r4\n\tjump.le\t@.BB19_51\n\tadd\tr3, r2, r4\n\tst.1\tr4, r0\n.BB19_51:\n\tadd\tstack-[9], r0, r4\n\tld.1\tr4, r4\n\tadd\t160, r1, r5\n\tst.1\tr5, r4\n\tadd\tstack-[10], r0, r4\n\tld.1\tr4, r4\n\tadd\t192, r1, r5\n\tst.1\tr5, r4\n\tadd\t31, r3, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r4\n\tadd\tstack-[8], r0, r5\n\tld.1\tr5, r5\n\tadd\t224, r1, r6\n\tadd\t224, r4, r7\n\tst.1\tr6, r7\n\tadd\tr4, r2, r2\n\tld.1\tr5, r4\n\tst.1.inc\tr2, r4, r2\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB19_56\n\tadd\tr0, r0, r6\n.BB19_53:\n\tadd\tr6, r2, r7\n\tadd\t32, r6, r6\n\tadd\tr6, r5, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB19_53\n\tsub!\tr6, r4, r5\n\tjump.le\t@.BB19_56\n\tadd\tr4, r2, r5\n\tst.1\tr5, r0\n.BB19_56:\n\tadd\t31, r4, r4\n\tand\tr4, r3, r3\n\tsub\tr2, r1, r2\n\tadd\tr2, r3, r2\n\tadd\t@CPI19_0[0], r0, r3\n\tsub.s!\t@CPI19_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI19_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI19_10[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB19_1\n\tret\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_7:\n\tadd\t@CPI19_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_13:\n\tadd\t@CPI19_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI19_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI19_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t39, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_5:\n\tadd\t@CPI19_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_acceptOffer:\n.func_begin20:\n\tnop\tstack+=[9]\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[9]\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tand\t@CPI20_1[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI20_1[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[3]\n\tjump.ne\t@.BB20_2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB20_12\n.BB20_2:\n\tadd\t@CPI20_2[0], r0, r4\n\tsub.s!\t@CPI20_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_3[0], r1, r1\n\tadd\tr9, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB20_71\n\tadd\tr0, r0, r6\n.BB20_4:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB20_4\n.BB20_71:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB20_6\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB20_6:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_7\n.BB20_12:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tjump.gt\t@.BB20_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_14\n\tst.1\t64, r1\n\tadd\t@CPI20_5[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t31, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr1, r0, r3\n\tand\t@CPI20_5[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI20_5[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB20_16\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB20_20\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB20_25\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r9\n\tadd\t68, r9, r2\n\tst.1\tr2, r1\n\tcontext.this\tr1\n\tand\t@CPI20_1[0], r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_7[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_30\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB20_40\n.BB20_30:\n\tadd\t@CPI20_2[0], r0, r4\n\tsub.s!\t@CPI20_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_8[0], r1, r1\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB20_69\n\tadd\tr0, r0, r6\n.BB20_32:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB20_32\n.BB20_69:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB20_34\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB20_34:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_35\n.BB20_40:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tjump.gt\t@.BB20_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_14\n\tst.1\t64, r1\n\tadd\t@CPI20_5[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_5[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI20_5[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB20_16\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB20_16\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI20_1[0], r3, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tand\t@CPI20_1[0], r3, r3\n\tadd\tr3, r0, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r9\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_50\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB20_60\n.BB20_50:\n\tadd\t@CPI20_2[0], r0, r4\n\tsub.s!\t@CPI20_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_10[0], r1, r1\n\tadd\tr9, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB20_67\n\tadd\tr0, r0, r6\n.BB20_52:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB20_52\n.BB20_67:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB20_54\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB20_54:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_55\n.BB20_60:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tjump.gt\t@.BB20_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_14\n\tst.1\t64, r1\n\tadd\t@CPI20_5[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI20_5[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI20_5[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB20_16\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB20_16\n\tadd\t@CPI20_2[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI20_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI20_12[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r6\n\tadd\tstack-[1], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_16\n\tret\n.BB20_16:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_14:\n\tadd\t@CPI20_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_2[0], r0, r2\n\tsub.s!\t@CPI20_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_25:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t39, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_2[0], r0, r2\n\tsub.s!\t@CPI20_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_7:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_70\n\tadd\tr0, r0, r5\n.BB20_9:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_9\n.BB20_70:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB20_11\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_11:\n\tadd\t@CPI20_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_35:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_68\n\tadd\tr0, r0, r5\n.BB20_37:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_37\n.BB20_68:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB20_39\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_39:\n\tadd\t@CPI20_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_55:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_66\n\tadd\tr0, r0, r5\n.BB20_57:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_57\n.BB20_66:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB20_59\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_59:\n\tadd\t@CPI20_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nabi_encode_stringliteral_520d:\n.func_begin21:\n\tadd\t96, r1, r2\n\tadd\t@CPI21_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI21_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end21:\n\nabi_encode_stringliteral:\n.func_begin22:\n\tadd\t64, r1, r2\n\tadd\t@CPI22_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end22:\n\nabi_encode_tuple_stringliteral:\n.func_begin23:\n\tadd\t64, r1, r2\n\tadd\t@CPI23_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end23:\n\n__farcall:\n.func_begin24:\n.tmp0:\n\tfar_call\tr1, r2, @.BB24_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB24_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end24:\n\n__staticcall:\n.func_begin25:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB25_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB25_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end25:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI4_0:\nCPI6_0:\nCPI10_1:\nCPI11_0:\nCPI13_0:\nCPI15_3:\nCPI16_3:\nCPI17_1:\nCPI18_2:\nCPI19_0:\nCPI20_2:\n\t.cell 4294967295\nCPI0_1:\nCPI2_2:\nCPI7_2:\nCPI8_2:\n\t.cell 18446744073709551616\nCPI0_2:\nCPI2_0:\nCPI3_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI18_14:\nCPI20_5:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI4_4:\nCPI5_0:\nCPI6_3:\nCPI9_1:\nCPI10_0:\nCPI13_4:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI17_5:\nCPI18_7:\nCPI19_3:\nCPI20_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI2_3:\nCPI4_5:\nCPI7_3:\nCPI8_3:\nCPI11_4:\nCPI13_5:\nCPI17_9:\nCPI18_16:\nCPI19_11:\nCPI20_19:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI2_4:\nCPI4_6:\nCPI7_4:\nCPI8_4:\nCPI11_5:\nCPI13_6:\nCPI17_10:\nCPI18_12:\nCPI19_12:\nCPI20_3:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 2166717396\nCPI0_8:\n\t.cell 3628315334\nCPI0_9:\n\t.cell 4076725130\nCPI0_10:\n\t.cell 4076725131\nCPI0_11:\n\t.cell 4228666474\nCPI0_12:\n\t.cell 3628315335\nCPI0_13:\n\t.cell 3851466090\nCPI0_14:\n\t.cell 2166717397\nCPI0_15:\n\t.cell 2376452955\nCPI0_16:\n\t.cell 3120010321\nCPI0_17:\n\t.cell 1640407048\nCPI0_18:\n\t.cell 1640407049\nCPI0_19:\n\t.cell 1901074598\nCPI0_20:\n\t.cell 2129231881\nCPI0_21:\n\t.cell 292775054\nCPI0_22:\n\t.cell 1292085669\nCPI0_23:\n\t.cell 1422920708\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\nCPI15_5:\nCPI16_5:\nCPI17_6:\nCPI18_18:\nCPI19_6:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI1_3:\nCPI15_6:\nCPI16_6:\nCPI17_7:\nCPI18_3:\nCPI19_9:\nCPI20_11:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI1_4:\nCPI15_7:\nCPI16_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI1_5:\n\t.cell 33076049464099060775801785251798309609309320424765788552424196626219717457017\nCPI1_6:\n\t.cell -23732200750868224834155265431149360164607239366326860612661793317034117013396\nCPI2_1:\nCPI4_3:\nCPI7_1:\nCPI8_1:\nCPI11_3:\nCPI13_3:\nCPI17_3:\nCPI18_13:\nCPI19_7:\nCPI20_4:\n\t.cell 18446744073709551615\nCPI4_1:\nCPI6_1:\nCPI10_2:\nCPI11_1:\nCPI13_1:\nCPI17_2:\nCPI18_8:\nCPI19_1:\nCPI20_6:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI4_2:\nCPI6_2:\nCPI11_2:\nCPI13_2:\nCPI17_4:\nCPI18_17:\nCPI19_8:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI15_1:\nCPI16_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI15_2:\nCPI16_2:\nCPI18_4:\nCPI19_15:\nCPI20_15:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI15_4:\nCPI16_4:\nCPI18_10:\nCPI20_8:\n\t.cell 7922816251426433759354395033600\nCPI16_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI16_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI16_10:\nCPI18_22:\nCPI19_16:\nCPI20_16:\n\t.cell 10458117451882892562347801444352\nCPI17_0:\nCPI18_1:\n\t.cell 18446744073709551520\nCPI17_8:\n\t.cell -1811407937210600828337446120236678859008173365177836813340945486756133071521\nCPI18_0:\n\t.cell 11430537079145650693387304458692941425836787954612963690241153482819318579200\nCPI18_5:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI18_6:\n\t.cell 10141204801825835211973625643008\nCPI18_9:\n\t.cell 33214008156304899519981230551617538325202280905366050478193966495389980819456\nCPI18_11:\nCPI20_0:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI18_15:\nCPI20_7:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI18_19:\n\t.cell 10585398177512698232485829067058037019776372454694038731496306464059073757106\nCPI18_20:\n\t.cell 49509583637313656658498975671232433370941046630006380761205818456330561650688\nCPI18_21:\n\t.cell 33213987989631693067883787898814815401940191597460742375867563173112780648301\nCPI19_2:\n\t.cell 18446744073709551424\nCPI19_4:\n\t.cell 18446744073709551551\nCPI19_5:\n\t.cell 44981092278881896340515598775506231375785535316971602998707775830837468069888\nCPI19_10:\n\t.cell 57778792754466953945454353001321832380823282033536210704136006886740929613076\nCPI19_13:\n\t.cell 45740905667525453257400309033812389742841937995715466942502705929692924346368\nCPI19_14:\n\t.cell 33213987989631693067883787898815172563700256956498786500909707656578388550004\nCPI20_9:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI20_10:\n\t.cell 5387515050969974956360988622848\nCPI20_12:\n\t.cell -23911511228340021174054210671056400942761059766036985757575897050177818170910\nCPI20_13:\n\t.cell 52525598396274449083000171436665196843619476159717843741689673742656584286208\nCPI20_14:\n\t.cell 33213987989631693067883787898815172563700256956498786500909707656569546827120\nCPI20_17:\n\t.cell 46316829105915512717812028186856675873710257229338128746867119221442906947584\nCPI20_18:\n\t.cell 33213987989631693067883787898814815401940191597460742375866911270432337567855\nCPI21_0:\n\t.cell 53099054837784784256966839789826930156163373552802976548428631167447102128128\nCPI21_1:\n\t.cell 31328436868881898538041100389690153948709681386377410647826978248703857811820\nCPI22_0:\n\t.cell 31328436868881898538041100389690153948709681386377410647826997655390221789184\nCPI23_0:\n\t.cell 31328436868881898538041100389690153948709681386377410647824661301558666854400\n","bytecode":{"object":""},"methodIdentifiers":{"acceptOffer(uint256,uint256)":"81257bd5","communities(uint256)":"e590b56a","communityMembers(uint256,uint256)":"54d00c04","createCommunity(string,uint256)":"1173648e","createOffer(uint256,string,uint256,uint256)":"7ee98009","joinCommunity(uint256,bytes)":"61c6a009","offerStatus(uint256)":"d843b2c7","offers(uint256,uint256)":"4d03a9a5","owner()":"8da5cb5b","renounceOwnership()":"715018a6","reputation(address)":"b9f79451","token()":"fc0c546a","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"contracts/PeerLocal.sol\"\nobject \"PeerLocal_2590\" {\n    code {\n        {\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PeerLocal_2590\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            constructor_PeerLocal(value)\n            let _2 := mload(64)\n            let _3 := datasize(\"PeerLocal_2590_deployed\")\n            codecopy(_2, dataoffset(\"PeerLocal_2590_deployed\"), _3)\n            return(_2, _3)\n        }\n        /// @ast-id 2344 @src 8:1570:1679  \"constructor(IERC20 _token) {...\"\n        function constructor_PeerLocal(var_token_address)\n        {\n            /// @src 0:2525:2531  \"_owner\"\n            let _1 := 0x00\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            let _2 := sload(/** @src 0:2525:2531  \"_owner\" */ _1)\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            let _3 := sub(shl(160, 1), 1)\n            let _4 := not(sub(shl(160, 1), 1))\n            sstore(/** @src 0:2525:2531  \"_owner\" */ _1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ or(and(_2, _4), /** @src 4:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _5 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n            /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(_5, /** @src 0:2525:2531  \"_owner\" */ _1, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(_2, _3), /** @src 4:719:729  \"msg.sender\" */ caller())\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            sstore(/** @src 8:325:359  \"\\\"I am the owner of this community\\\"\" */ 0x01, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x4920616d20746865206f776e6572206f66207468697320636f6d6d756e697479)\n            sstore(/** @src 8:1264:1265  \"0\" */ 0x04, /** @src 0:2525:2531  \"_owner\" */ _1)\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            sstore(/** @src 8:1294:1295  \"0\" */ 0x05, /** @src 0:2525:2531  \"_owner\" */ _1)\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            let _6 := and(var_token_address, _3)\n            sstore(/** @src 8:1607:1621  \"token = _token\" */ 0x02, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ or(and(sload(/** @src 8:1607:1621  \"token = _token\" */ 0x02), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _4), _6))\n            /// @src 8:1636:1672  \"PeerLocalInitalized(address(_token))\"\n            log2(_5, /** @src 0:2525:2531  \"_owner\" */ _1, /** @src 8:1636:1672  \"PeerLocalInitalized(address(_token))\" */ 0xcb880ce60e28c1cc24531731b8cd4417425fb64a20c0a4a43496376f1b7c606c, _6)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 8:\"contracts/PeerLocal.sol\"\n    object \"PeerLocal_2590_deployed\" {\n        code {\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x1173648e {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_stringt_uint256(calldatasize())\n                        fun_createCommunity(param, param_1)\n                        return(mload(_1), _2)\n                    }\n                    case 0x4d03a9a5 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret, ret_1, ret_2, ret_3, ret_4, ret_5 := getter_fun_offers(param_2, param_3)\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_address_uint256_string_uint256_uint256_string(memPos, ret, ret_1, ret_2, ret_3, ret_4, ret_5), memPos))\n                    }\n                    case 0x54d00c04 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_6 := getter_fun_communityMembers(param_4, param_5)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_address(memPos_1, ret_6), memPos_1))\n                    }\n                    case 0x61c6a009 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_6, param_7 := abi_decode_uint256t_bytes(calldatasize())\n                        fun_joinCommunity(param_6, param_7)\n                        return(mload(_1), _2)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 0:1831:1932  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner()\n                        /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x7ee98009 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_8, param_9, param_10, param_11 := abi_decode_uint256t_stringt_uint256t_uint256(calldatasize())\n                        fun_createOffer(param_8, param_9, param_10, param_11)\n                        return(mload(_1), _2)\n                    }\n                    case 0x81257bd5 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_12, param_13 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_acceptOffer(param_12, param_13)\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_7 := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_address(memPos_2, ret_7), memPos_2))\n                    }\n                    case 0xb9f79451 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_8 := getter_fun_reputation(abi_decode_address(calldatasize()))\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_uint256(memPos_3, ret_8), memPos_3))\n                    }\n                    case 0xd843b2c7 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_9 := getter_fun_offerStatus(abi_decode_uint256(calldatasize()))\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_string(memPos_4, ret_9), memPos_4))\n                    }\n                    case 0xe590b56a {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_10, ret_11, ret_12 := getter_fun_communities(abi_decode_uint256(calldatasize()))\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_string_uint256_address(memPos_5, ret_10, ret_11, ret_12), memPos_5))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 0:2081:2279  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner_74(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0xfc0c546a {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_13 := and(sload(/** @src 8:1151:1170  \"IERC20 public token\" */ 2), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_address(memPos_6, ret_13), memPos_6))\n                    }\n                }\n                revert(0, 0)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_5752(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 192)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n            }\n            function abi_decode_stringt_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value0 := abi_decode_string(add(4, offset), dataEnd)\n                value1 := calldataload(36)\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5755(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 8:2238:2249  \"communities\" */ 0x03)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5758(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 8:2634:2650  \"communityMembers\" */ 0x07)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 8:3234:3240  \"offers\" */ 0x06)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(slot, key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function extract_from_storage_value_offsett_address(slot_value) -> value\n            {\n                value := and(slot_value, sub(shl(160, 1), 1))\n            }\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            /// @ast-id 2313 @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\"\n            function getter_fun_offers(key, key_1) -> ret, ret_1, ret_2_mpos, ret_2, ret_3, ret_5_mpos\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ key)\n                mstore(0x20, /** @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\" */ 6)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ key_1)\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40)\n                /// @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\"\n                ret := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(sload(/** @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\" */ dataSlot_1), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\"\n                ret_1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\" */ add(dataSlot_1, 1))\n                ret_2_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_1, 2))\n                ret_2 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\" */ add(dataSlot_1, 3))\n                ret_3 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1340:1399  \"mapping(uint256 => mapping(uint256 => Offer)) public offers\" */ add(dataSlot_1, 4))\n                ret_5_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_1, 5))\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_address_uint256_string_uint256_uint256_string(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), 192)\n                let tail_1 := abi_encode_string_memory_ptr(value2, add(headStart, 192))\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), sub(tail_1, headStart))\n                tail := abi_encode_string_memory_ptr(value5, tail_1)\n            }\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 2318 @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\"\n            function getter_fun_communityMembers(key, key_1) -> ret\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ key)\n                mstore(0x20, /** @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\" */ 7)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40)\n                /// @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\"\n                if iszero(lt(key_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\" */ dataSlot)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\"\n                let slot, offset := storage_array_index_access_address_dyn(dataSlot, key_1)\n                ret := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(shr(shl(3, offset), sload(/** @src 8:1406:1459  \"mapping(uint256 => address[]) public communityMembers\" */ slot)), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1))\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_uint256t_bytes(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                value1 := abi_decode_available_length_string(add(offset, 36), calldataload(add(4, offset)), dataEnd)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_stringt_uint256t_uint256(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value1 := abi_decode_string(add(4, offset), dataEnd)\n                value2 := calldataload(68)\n                value3 := calldataload(100)\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                value0 := value\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 8:3641:3651  \"reputation\" */ 0x08)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 2322 @src 8:1465:1510  \"mapping(address => uint256) public reputation\"\n            function getter_fun_reputation(key) -> ret\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src 8:1465:1510  \"mapping(address => uint256) public reputation\" */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 8:1465:1510  \"mapping(address => uint256) public reputation\" */ 8)\n                ret := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(keccak256(/** @src 8:1465:1510  \"mapping(address => uint256) public reputation\" */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            /// @ast-id 2326 @src 8:1517:1562  \"mapping(uint256 => string) public offerStatus\"\n            function getter_fun_offerStatus(key) -> ret_mpos\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src 8:1517:1562  \"mapping(uint256 => string) public offerStatus\" */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ key)\n                mstore(0x20, /** @src 8:1517:1562  \"mapping(uint256 => string) public offerStatus\" */ 9)\n                ret_mpos := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ copy_array_from_storage_to_memory_string(keccak256(/** @src 8:1517:1562  \"mapping(uint256 => string) public offerStatus\" */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40))\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n            }\n            /// @ast-id 2300 @src 8:1183:1231  \"mapping(uint256 => Community) public communities\"\n            function getter_fun_communities(key) -> ret_0_mpos, ret, ret_1\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ key)\n                mstore(0x20, /** @src 8:1183:1231  \"mapping(uint256 => Community) public communities\" */ 3)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40)\n                /// @src 8:1183:1231  \"mapping(uint256 => Community) public communities\"\n                ret_0_mpos := copy_array_from_storage_to_memory_string(dataSlot)\n                ret := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1183:1231  \"mapping(uint256 => Community) public communities\" */ add(dataSlot, 1))\n                ret_1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(sload(/** @src 8:1183:1231  \"mapping(uint256 => Community) public communities\" */ add(dataSlot, 2)), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1))\n            }\n            function abi_encode_string_uint256_address(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 96)\n                tail := abi_encode_string_memory_ptr(value0, add(headStart, 96))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner()\n            {\n                fun_checkOwner()\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _1 := sload(0)\n                sstore(0, and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64), 0, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ value, /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_74(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:2169:2191  \"newOwner != address(0)\" */ var_newOwner, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _1)\n                if /** @src 0:2169:2191  \"newOwner != address(0)\" */ iszero(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 0:2525:2531  \"_owner\" */ 0x00)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                sstore(/** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64), /** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(_3, _1), /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _2 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(slot, src)\n            {\n                let newLen := mload(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n                let srcOffset := 0\n                let srcOffset_1 := 0x20\n                srcOffset := srcOffset_1\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage(slot)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function update_storage_value_offsett_uint256_to_uint256(value)\n            {\n                sstore(/** @src 8:1795:1811  \"communityCounter\" */ 0x04, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_5761(value)\n            {\n                sstore(/** @src 8:3077:3094  \"offerCounter += 1\" */ 0x05, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ value)\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                if lt(x, 1) { panic_error_0x11() }\n                diff := add(x, not(0))\n            }\n            function abi_encode_string_uint256(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                tail := abi_encode_string_memory_ptr(value0, add(headStart, 64))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 2376 @src 8:1685:2047  \"function createCommunity(string memory ipfsMetadata, uint256 stakingRequirement) public {...\"\n            function fun_createCommunity(var_ipfsMetadata_mpos, var_stakingRequirement)\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_5752(memPtr)\n                mstore(memPtr, var_ipfsMetadata_mpos)\n                /// @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\"\n                let _1 := 32\n                let _2 := add(memPtr, _1)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(_2, var_stakingRequirement)\n                /// @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\"\n                let _3 := add(memPtr, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 64)\n                mstore(_3, /** @src 8:1901:1911  \"msg.sender\" */ caller())\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _4 := sload(/** @src 8:1795:1811  \"communityCounter\" */ 0x04)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _4)\n                mstore(/** @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\" */ _1, /** @src 8:1783:1794  \"communities\" */ 0x03)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 64)\n                let _5 := mload(memPtr)\n                let newLen := mload(_5)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(dataSlot, extract_byte_array_length(sload(dataSlot)), newLen)\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                srcOffset := /** @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\" */ _1\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage(dataSlot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\" */ _1)\n                    }\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    {\n                        sstore(dstPtr, mload(add(_5, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, /** @src 8:1815:1913  \"Community({ipfsMetadata: ipfsMetadata, stakingRequirement: stakingRequirement, owner: msg.sender})\" */ _1)\n                    }\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_5, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 8:1783:1794  \"communities\" */ 0x03, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ newLen), 248), not(0)))))\n                    }\n                    sstore(dataSlot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    if newLen\n                    {\n                        value := mload(add(_5, srcOffset))\n                    }\n                    sstore(dataSlot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n                sstore(add(dataSlot, 1), mload(_2))\n                update_storage_value_offsett_address_to_address(add(dataSlot, 2), extract_from_storage_value_offsett_address(mload(_3)))\n                /// @src 8:1923:1941  \"communityCounter++\"\n                update_storage_value_offsett_uint256_to_uint256(increment_uint256(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1795:1811  \"communityCounter\" */ 0x04)))\n                /// @src 8:1973:1993  \"communityCounter - 1\"\n                let expr := checked_sub_uint256(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:1795:1811  \"communityCounter\" */ 0x04))\n                /// @src 8:1956:2040  \"CommunityCreated(communityCounter - 1, ipfsMetadata, stakingRequirement, msg.sender)\"\n                let _6 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:1956:2040  \"CommunityCreated(communityCounter - 1, ipfsMetadata, stakingRequirement, msg.sender)\"\n                log3(_6, sub(abi_encode_string_uint256(_6, var_ipfsMetadata_mpos, var_stakingRequirement), _6), 0xfbfec78961027d8919f53e6283bb0e6c6d4bc310e87697187bc641f241ea155f, expr, /** @src 8:1901:1911  \"msg.sender\" */ caller())\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function require_helper_stringliteral_4f2d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"Invalid signature\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function require_helper_stringliteral_7d2c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Insufficient balance to join com\")\n                    mstore(add(memPtr, 100), \"munity\")\n                    revert(memPtr, 132)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            function array_push_from_address_to_array_address_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                let mask := shl(shiftBits, _1)\n                sstore(slot, or(and(_2, not(mask)), and(shl(shiftBits, and(value0, _1)), mask)))\n            }\n            /// @ast-id 2439 @src 8:2053:2770  \"function joinCommunity(uint256 communityId, bytes memory signature) public {...\"\n            function fun_joinCommunity(var_communityId, var_signature_mpos)\n            {\n                /// @src 8:2209:2234  \"_recoverSigner(signature)\"\n                let expr := /** @src 8:4265:4359  \"ECDSA.recover(ECDSA.toEthSignedMessageHash(MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER), signature)\" */ fun_recover(/** @src 8:4279:4347  \"ECDSA.toEthSignedMessageHash(MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER)\" */ fun_toEthSignedMessageHash(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:4308:4346  \"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER\" */ 0x01)), /** @src 8:2209:2234  \"_recoverSigner(signature)\" */ var_signature_mpos)\n                /// @src 8:2201:2290  \"require(_recoverSigner(signature) == communities[communityId].owner, \\\"Invalid signature\\\")\"\n                require_helper_stringliteral_4f2d(/** @src 8:2209:2268  \"_recoverSigner(signature) == communities[communityId].owner\" */ eq(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(/** @src 8:2209:2268  \"_recoverSigner(signature) == communities[communityId].owner\" */ expr, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1)), /** @src 8:2209:2268  \"_recoverSigner(signature) == communities[communityId].owner\" */ extract_from_storage_value_offsett_address(/** @src 8:2238:2268  \"communities[communityId].owner\" */ read_from_storage_split_offset_address(add(/** @src 8:2238:2262  \"communities[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5755(var_communityId), /** @src 8:2238:2268  \"communities[communityId].owner\" */ 2)))))\n                /// @src 8:2308:2323  \"token.balanceOf\"\n                let expr_2397_address := extract_from_storage_value_offsett_address(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ extract_from_storage_value_offsett_address(sload(/** @src 8:2238:2268  \"communities[communityId].owner\" */ 2)))\n                /// @src 8:2308:2335  \"token.balanceOf(msg.sender)\"\n                let _1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:2308:2335  \"token.balanceOf(msg.sender)\"\n                mstore(_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 8:2308:2335  \"token.balanceOf(msg.sender)\"\n                let _2 := staticcall(gas(), expr_2397_address, _1, sub(abi_encode_address(add(_1, 4), /** @src 8:2324:2334  \"msg.sender\" */ caller()), /** @src 8:2308:2335  \"token.balanceOf(msg.sender)\" */ _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 8:2308:2335  \"token.balanceOf(msg.sender)\"\n                if _2\n                {\n                    finalize_allocation(_1, returndatasize())\n                    expr_1 := abi_decode_uint256_fromMemory(_1, add(_1, returndatasize()))\n                }\n                /// @src 8:2300:2425  \"require(token.balanceOf(msg.sender) >= communities[communityId].stakingRequirement, \\\"Insufficient balance to join community\\\")\"\n                require_helper_stringliteral_7d2c(/** @src 8:2308:2382  \"token.balanceOf(msg.sender) >= communities[communityId].stakingRequirement\" */ iszero(lt(expr_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:2339:2382  \"communities[communityId].stakingRequirement\" */ add(/** @src 8:2339:2363  \"communities[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5755(var_communityId), /** @src 8:4308:4346  \"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER\" */ 0x01)))))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _3 := sload(/** @src 8:2534:2577  \"communities[communityId].stakingRequirement\" */ add(/** @src 8:2534:2558  \"communities[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5755(var_communityId), /** @src 8:4308:4346  \"MESSAGE_TO_BE_SIGNED_BY_COMMUNIT_OWNER\" */ 0x01))\n                /// @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\"\n                let _4 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\"\n                mstore(_4, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0x23b872dd))\n                /// @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\"\n                let _5 := call(gas(), expr_2397_address, /** @src -1:-1:-1 */ 0, /** @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\" */ _4, sub(abi_encode_address_address_uint256(add(_4, /** @src 8:2308:2335  \"token.balanceOf(msg.sender)\" */ 4), /** @src 8:2324:2334  \"msg.sender\" */ caller(), /** @src 8:2527:2531  \"this\" */ address(), /** @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\" */ _3), _4), _4, /** @src 8:2308:2335  \"token.balanceOf(msg.sender)\" */ 32)\n                /// @src 8:2488:2578  \"token.transferFrom(msg.sender, address(this), communities[communityId].stakingRequirement)\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_4, add(_4, returndatasize())))\n                }\n                /// @src 8:2634:2680  \"communityMembers[communityId].push(msg.sender)\"\n                array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 8:2634:2663  \"communityMembers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5758(var_communityId), /** @src 8:2324:2334  \"msg.sender\" */ caller())\n                /// @src 8:2717:2763  \"MemberJoinedCommunity(communityId, msg.sender)\"\n                log3(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 8:2717:2763  \"MemberJoinedCommunity(communityId, msg.sender)\" */ 0x17671f80466a04ae9525dbdb041b26d88ef566a69866f8bd126b07df7c23ffb2, var_communityId, /** @src 8:2324:2334  \"msg.sender\" */ caller())\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function checked_add_uint256(x) -> sum\n            {\n                if gt(x, not(1)) { panic_error_0x11() }\n                sum := add(x, /** @src 8:3093:3094  \"1\" */ 0x01)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function copy_literal_to_memory_76253669260cf524e3db8d89857f289f85025242f93be69d3ee9d28478803768() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr_1, 7)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"created\")\n            }\n            function copy_struct_to_storage_from_struct_Offer_to_struct_Offer(slot, value)\n            {\n                update_storage_value_offsett_address_to_address(slot, and(mload(value), sub(shl(160, 1), 1)))\n                let _1 := 1\n                let _2 := 32\n                sstore(add(slot, _1), mload(add(value, _2)))\n                let memberSlot := add(slot, 2)\n                let _3 := mload(add(value, 64))\n                let newLen := mload(_3)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(memberSlot, extract_byte_array_length(sload(memberSlot)), newLen)\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                srcOffset := _2\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage(memberSlot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _2) }\n                    {\n                        sstore(dstPtr, mload(add(_3, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_3, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(memberSlot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    if newLen\n                    {\n                        value_1 := mload(add(_3, srcOffset))\n                    }\n                    sstore(memberSlot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen))\n                }\n                sstore(add(slot, 3), mload(add(value, 96)))\n                sstore(add(slot, 4), mload(add(value, 128)))\n                copy_byte_array_to_storage_from_string_to_string(add(slot, 5), mload(add(value, 160)))\n            }\n            function abi_encode_uint256_struct_Offer(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), and(mload(value1), sub(shl(160, 1), 1)))\n                mstore(add(headStart, 96), mload(add(value1, 32)))\n                let memberValue0 := mload(add(value1, 64))\n                mstore(add(headStart, 128), 0xc0)\n                let tail_1 := abi_encode_string_memory_ptr(memberValue0, add(headStart, 256))\n                mstore(add(headStart, 160), mload(add(value1, 96)))\n                mstore(add(headStart, 0xc0), mload(add(value1, 128)))\n                let memberValue0_1 := mload(add(value1, 160))\n                mstore(add(headStart, 224), add(sub(tail_1, headStart), not(/** @src 8:1956:2040  \"CommunityCreated(communityCounter - 1, ipfsMetadata, stakingRequirement, msg.sender)\" */ 63)))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                tail := abi_encode_string_memory_ptr(memberValue0_1, tail_1)\n            }\n            /// @ast-id 2492 @src 8:2776:3414  \"function createOffer(uint256 communityId, string memory metadata, uint256 reputationRequirement, uint256 stakingRequirement) public {...\"\n            function fun_createOffer(var_communityId, var_metadata_mpos, var_reputationRequirement, var_stakingRequirement)\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:2937:2947  \"msg.sender\" */ caller())\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(0x20, /** @src 8:2926:2936  \"reputation\" */ 0x08)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                if /** @src 8:2926:2973  \"reputation[msg.sender] >= reputationRequirement\" */ lt(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40)), /** @src 8:2926:2973  \"reputation[msg.sender] >= reputationRequirement\" */ var_reputationRequirement)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 39)\n                    mstore(add(memPtr, 68), \"Insufficient reputation to creat\")\n                    mstore(add(memPtr, 100), \"e offer\")\n                    revert(memPtr, 132)\n                }\n                /// @src 8:3077:3094  \"offerCounter += 1\"\n                update_storage_value_offsett_uint256_to_uint256_5761(checked_add_uint256(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:3077:3094  \"offerCounter += 1\" */ 0x05)))\n                /// @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\"\n                let expr_2475_mpos := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ allocate_memory()\n                /// @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\"\n                write_to_memory_address(expr_2475_mpos, /** @src 8:2937:2947  \"msg.sender\" */ caller())\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(/** @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\" */ add(expr_2475_mpos, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x20), var_communityId)\n                mstore(/** @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\" */ add(expr_2475_mpos, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 0x40), var_metadata_mpos)\n                mstore(/** @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\" */ add(expr_2475_mpos, 96), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ var_reputationRequirement)\n                mstore(/** @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\" */ add(expr_2475_mpos, 128), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ var_stakingRequirement)\n                mstore(/** @src 8:3129:3223  \"Offer(msg.sender, communityId, metadata, reputationRequirement, stakingRequirement, \\\"created\\\")\" */ add(expr_2475_mpos, 160), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ copy_literal_to_memory_76253669260cf524e3db8d89857f289f85025242f93be69d3ee9d28478803768())\n                /// @src 8:3234:3253  \"offers[communityId]\"\n                let _1 := mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                copy_struct_to_storage_from_struct_Offer_to_struct_Offer(/** @src 8:3234:3267  \"offers[communityId][offerCounter]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:3077:3094  \"offerCounter += 1\" */ 0x05)), /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ expr_2475_mpos)\n                let _2 := sload(/** @src 8:3077:3094  \"offerCounter += 1\" */ 0x05)\n                /// @src 8:3358:3407  \"OfferCreated(communityId, offerCounter, newOffer)\"\n                let _3 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(0x40)\n                /// @src 8:3358:3407  \"OfferCreated(communityId, offerCounter, newOffer)\"\n                log2(_3, sub(abi_encode_uint256_struct_Offer(_3, _2, expr_2475_mpos), _3), 0x7fbda346a441a14329848f3b8275cceef226a832a7bd105f991a582389e50d14, var_communityId)\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"Insufficient balance to accept o\")\n                    mstore(add(memPtr, 100), \"ffer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_76ec(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 39)\n                    mstore(add(memPtr, 68), \"Insufficient reputation to accep\")\n                    mstore(add(memPtr, 100), \"t offer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 2572 @src 8:3420:4149  \"function acceptOffer(uint256 communityId, uint256 offerId) public {...\"\n            function fun_acceptOffer(var_communityId, var_offerId)\n            {\n                /// @src 8:3504:3519  \"token.balanceOf\"\n                let expr_address := extract_from_storage_value_offsett_address(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ extract_from_storage_value_offsett_address(sload(/** @src 8:3504:3509  \"token\" */ 0x02)))\n                /// @src 8:3504:3531  \"token.balanceOf(msg.sender)\"\n                let _1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:3504:3531  \"token.balanceOf(msg.sender)\"\n                mstore(_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 8:3504:3531  \"token.balanceOf(msg.sender)\"\n                let _2 := 4\n                let _3 := staticcall(gas(), expr_address, _1, sub(abi_encode_address(add(_1, _2), /** @src 8:3520:3530  \"msg.sender\" */ caller()), /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _1), _1, 32)\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 8:3504:3531  \"token.balanceOf(msg.sender)\"\n                if _3\n                {\n                    finalize_allocation(_1, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, returndatasize()))\n                }\n                /// @src 8:3496:3623  \"require(token.balanceOf(msg.sender) >= offers[communityId][offerId].stakingRequirement, \\\"Insufficient balance to accept offer\\\")\"\n                require_helper_stringliteral(/** @src 8:3504:3582  \"token.balanceOf(msg.sender) >= offers[communityId][offerId].stakingRequirement\" */ iszero(lt(expr, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:3535:3582  \"offers[communityId][offerId].stakingRequirement\" */ add(/** @src 8:3535:3563  \"offers[communityId][offerId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(/** @src 8:3535:3554  \"offers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId), /** @src 8:3535:3563  \"offers[communityId][offerId]\" */ var_offerId), /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _2)))))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _4 := sload(/** @src 8:3641:3663  \"reputation[msg.sender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 8:3520:3530  \"msg.sender\" */ caller()))\n                /// @src 8:3633:3761  \"require(reputation[msg.sender] >= offers[communityId][offerId].reputationRequirement, \\\"Insufficient reputation to accept offer\\\")\"\n                require_helper_stringliteral_76ec(/** @src 8:3641:3717  \"reputation[msg.sender] >= offers[communityId][offerId].reputationRequirement\" */ iszero(lt(_4, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sload(/** @src 8:3667:3717  \"offers[communityId][offerId].reputationRequirement\" */ add(/** @src 8:3667:3695  \"offers[communityId][offerId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(/** @src 8:3667:3686  \"offers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId), /** @src 8:3667:3695  \"offers[communityId][offerId]\" */ var_offerId), /** @src 8:3667:3717  \"offers[communityId][offerId].reputationRequirement\" */ 3)))))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _5 := sload(/** @src 8:3852:3899  \"offers[communityId][offerId].stakingRequirement\" */ add(/** @src 8:3852:3880  \"offers[communityId][offerId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(/** @src 8:3852:3871  \"offers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId), /** @src 8:3852:3880  \"offers[communityId][offerId]\" */ var_offerId), /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _2))\n                /// @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\"\n                let _6 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\"\n                mstore(_6, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0x23b872dd))\n                /// @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\"\n                let _7 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\" */ _6, sub(abi_encode_address_address_uint256(add(_6, /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _2), /** @src 8:3520:3530  \"msg.sender\" */ caller(), /** @src 8:3845:3849  \"this\" */ address(), /** @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\" */ _5), _6), _6, /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ 32)\n                /// @src 8:3806:3900  \"token.transferFrom(msg.sender, address(this), offers[communityId][offerId].stakingRequirement)\"\n                if iszero(_7) { revert_forward() }\n                if _7\n                {\n                    finalize_allocation(_6, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_6, add(_6, returndatasize())))\n                }\n                /// @src 8:3959:3973  \"token.transfer\"\n                let expr_2549_address := extract_from_storage_value_offsett_address(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ extract_from_storage_value_offsett_address(sload(/** @src 8:3504:3509  \"token\" */ 0x02)))\n                /// @src 8:3974:4008  \"offers[communityId][offerId].owner\"\n                let _8 := read_from_storage_split_offset_address(/** @src 8:3974:4002  \"offers[communityId][offerId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(/** @src 8:3974:3993  \"offers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId), /** @src 8:3974:4002  \"offers[communityId][offerId]\" */ var_offerId))\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                let _9 := sload(/** @src 8:4010:4057  \"offers[communityId][offerId].stakingRequirement\" */ add(/** @src 8:4010:4038  \"offers[communityId][offerId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256(/** @src 8:4010:4029  \"offers[communityId]\" */ mapping_index_access_mapping_uint256_mapping_uint256_struct_Offer_storage_of_uint256_5763(var_communityId), /** @src 8:4010:4038  \"offers[communityId][offerId]\" */ var_offerId), /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _2))\n                /// @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\"\n                let _10 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\"\n                mstore(_10, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(224, 0xa9059cbb))\n                /// @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\"\n                let _11 := call(gas(), expr_2549_address, /** @src -1:-1:-1 */ 0, /** @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ _2), /** @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\" */ _8, _9), _10), _10, /** @src 8:3504:3531  \"token.balanceOf(msg.sender)\" */ 32)\n                /// @src 8:3959:4058  \"token.transfer(offers[communityId][offerId].owner, offers[communityId][offerId].stakingRequirement)\"\n                if iszero(_11) { revert_forward() }\n                if _11\n                {\n                    finalize_allocation(_10, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_10, add(_10, returndatasize())))\n                }\n                /// @src 8:4095:4142  \"OfferAccepted(communityId, offerId, msg.sender)\"\n                log4(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 8:4095:4142  \"OfferAccepted(communityId, offerId, msg.sender)\" */ 0xcb229072cbcd1d5410a56504f86a872c0eac1578c7eb4463ec190b52d3b669e2, var_communityId, var_offerId, /** @src 8:3520:3530  \"msg.sender\" */ caller())\n            }\n            /// @ast-id 1126 @src 6:3661:3888  \"function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {...\"\n            function fun_recover(var_hash, var_signature_1104_mpos) -> var_\n            {\n                /// @src 6:3800:3827  \"tryRecover(hash, signature)\"\n                let expr_component, expr_component_1 := fun_tryRecover_1099(var_hash, var_signature_1104_mpos)\n                /// @src 6:3849:3854  \"error\"\n                fun_throwError(expr_component_1)\n                /// @src 6:3865:3881  \"return recovered\"\n                var_ := expr_component\n            }\n            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n            function validator_assert_enum_RecoverError(value)\n            {\n                if iszero(lt(value, 5))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_stringliteral_520d(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 34)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n                mstore(add(headStart, 96), \"ue\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 31)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n                tail := add(headStart, 96)\n            }\n            function abi_encode_tuple_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 24)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n                tail := add(headStart, 96)\n            }\n            /// @ast-id 1053 @src 6:570:1081  \"function _throwError(RecoverError error) private pure {...\"\n            function fun_throwError(var_error)\n            {\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                validator_assert_enum_RecoverError(var_error)\n                /// @src 6:634:1075  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 6:638:667  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 6:634:1075  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                    validator_assert_enum_RecoverError(var_error)\n                    /// @src 6:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 6:734:772  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 6:743:772  \"RecoverError.InvalidSignature\" */ 1)\n                    case /** @src 6:730:1075  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                        validator_assert_enum_RecoverError(var_error)\n                        /// @src 6:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 6:843:887  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 6:852:887  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 6:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                            validator_assert_enum_RecoverError(var_error)\n                            /// @src 6:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 6:965:1004  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 6:974:1004  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 6:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 6:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                let _1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                                /// @src 6:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                mstore(_1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(229, 4594637))\n                                /// @src 6:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                revert(_1, sub(abi_encode_stringliteral_520d(add(_1, 4)), _1))\n                            }\n                        }\n                        default /// @src 6:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 6:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            let _2 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                            /// @src 6:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            mstore(_2, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(229, 4594637))\n                            /// @src 6:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            revert(_2, sub(abi_encode_stringliteral(add(_2, 4)), _2))\n                        }\n                    }\n                    default /// @src 6:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 6:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        let _3 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                        /// @src 6:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        mstore(_3, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ shl(229, 4594637))\n                        /// @src 6:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        revert(_3, sub(abi_encode_tuple_stringliteral(add(_3, 4)), _3))\n                    }\n                }\n                default /// @src 6:634:1075  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 6:683:690  \"return;\"\n                    leave\n                }\n            }\n            /// @ast-id 1099 @src 6:2145:2875  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {...\"\n            function fun_tryRecover_1099(var_hash, var_signature_1058_mpos) -> var, var_1\n            {\n                /// @src 6:2259:2869  \"if (signature.length == 65) {...\"\n                switch /** @src 6:2263:2285  \"signature.length == 65\" */ eq(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(/** @src 6:2263:2279  \"signature.length\" */ var_signature_1058_mpos), /** @src 6:2283:2285  \"65\" */ 0x41)\n                case /** @src 6:2259:2869  \"if (signature.length == 65) {...\" */ 0 {\n                    /// @src 6:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var := /** @src 6:2818:2819  \"0\" */ 0x00\n                    /// @src 6:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var_1 := /** @src 6:2822:2857  \"RecoverError.InvalidSignatureLength\" */ 2\n                    /// @src 6:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    leave\n                }\n                default /// @src 6:2259:2869  \"if (signature.length == 65) {...\"\n                {\n                    /// @src 6:2546:2726  \"assembly {...\"\n                    let var_r := mload(add(var_signature_1058_mpos, 0x20))\n                    /// @src 6:2746:2771  \"tryRecover(hash, v, r, s)\"\n                    let expr_component, expr_1085_component := fun_tryRecover(var_hash, /** @src 6:2546:2726  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 6:2546:2726  \"assembly {...\" */ mload(add(var_signature_1058_mpos, 0x60))), /** @src 6:2746:2771  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 6:2546:2726  \"assembly {...\" */ mload(add(var_signature_1058_mpos, 0x40)))\n                    /// @src 6:2739:2771  \"return tryRecover(hash, v, r, s)\"\n                    var := expr_component\n                    var_1 := expr_1085_component\n                    leave\n                }\n            }\n            /// @ast-id 1267 @src 6:5069:6563  \"function tryRecover(...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1\n            {\n                /// @src 6:6102:6263  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 6:6106:6185  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 6:6119:6185  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 6:6102:6263  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 6:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var := /** @src 6:6217:6218  \"0\" */ 0x00\n                    /// @src 6:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var_1 := /** @src 6:6221:6251  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 6:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    leave\n                }\n                /// @src 6:6374:6398  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 6:6374:6398  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 6:6374:6398  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 32))\n                /// @src 6:6374:6398  \"ecrecover(hash, v, r, s)\"\n                { revert_forward() }\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 6:6408:6509  \"if (signer == address(0)) {...\"\n                if /** @src 6:6412:6432  \"signer == address(0)\" */ iszero(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ and(/** @src 6:6412:6432  \"signer == address(0)\" */ _3, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 6:6408:6509  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 6:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 6:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var_1 := /** @src 6:6374:6398  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 6:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    leave\n                }\n                /// @src 6:6519:6556  \"return (signer, RecoverError.NoError)\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 1317 @src 6:7256:7521  \"function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {...\"\n            function fun_toEthSignedMessageHash(var_hash) -> var\n            {\n                /// @src 6:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let expr_mpos := /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ mload(64)\n                /// @src 6:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 8:239:4441  \"contract PeerLocal is Ownable {...\"\n                mstore(_1, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n                mstore(add(/** @src 6:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\" */ expr_mpos, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 60), var_hash)\n                /// @src 6:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                mstore(expr_mpos, /** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ 60)\n                /// @src 6:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                finalize_allocation_5752(expr_mpos)\n                /// @src 6:7438:7514  \"return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\"\n                var := /** @src 6:7445:7514  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ keccak256(/** @src 8:239:4441  \"contract PeerLocal is Ownable {...\" */ _1, mload(/** @src 6:7445:7514  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ expr_mpos))\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122029c86cd949e7d344177b32f666dd5f61f4f66011dff292bf48380545bae16aaf6c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"010003bd78a037d341744e00ecbc9c10e216d98f1dbbf4821f9664c17cba348a","factoryDependencies":{}}},"contracts/ReputationToken.sol":{"ReputationToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReputationToken.sol\":\"ReputationToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ReputationToken.sol\":{\"keccak256\":\"0xde477ae6beb122f2fefac018e523f1d5b89a5f2baeae5d2fdd7219e80a1ac860\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b5b843f428a0055cde12f5ca3cf2fe33f49e4bf5e66507a805eaf8ec6b1047\",\"dweb:/ipfs/QmTkyKQwgrbT9rqf8ucrSkvom22JeLayuGiNcenVwJ1iaM\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":128,"contract":"contracts/ReputationToken.sol:ReputationToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"contracts/ReputationToken.sol:ReputationToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"contracts/ReputationToken.sol:ReputationToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"contracts/ReputationToken.sol:ReputationToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"contracts/ReputationToken.sol:ReputationToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ReputationToken.sol:ReputationToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.le\t@.BB0_28\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_38\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_1[0], r6, r1\n\tjump.ge\t@.BB0_4\n\tadd\t64, r6, r1\n\tst.1\t64, r1\n\tadd\t15, r0, r1\n\tst.1.inc\tr6, r1, r8\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\tr8, r1\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r5\n\tst.1\tr4, r5\n\tld.1\tr6, r7\n\tsub.s!\t@CPI0_5[0], r7, r1\n\tjump.le\t@.BB0_7\n.BB0_4:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.le\t@.BB0_29\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_46\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_61\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2490, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_29:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_41\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_9\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_61:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_41:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2477, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_14\n\tadd\tr3, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tadd\tr7, r0, stack-[4]\n\tadd\tr6, r0, stack-[5]\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB0_14\n.BB0_13:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB0_23\n\tadd\tr7, r0, stack-[4]\n\tadd\tr6, r0, stack-[5]\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r8\n\tand!\tr8, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r7\n\tjump.eq\t@.BB0_20\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_19:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tsub!\tr3, r8, r3\n\tjump.ge\t@.BB0_22\n\tshl.s\t3, r8, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_22:\n\tadd\t1, r0, r1\n\tshl.s\t1, r8, r2\n\tadd\tstack-[6], r0, r4\n\tadd\tr6, r0, r5\n\tjump\t@.BB0_15\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tsub.s!\t0, r7, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_25\n\tld.1\tr8, r1\n.BB0_25:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r7, r1\n.BB0_15:\n\tor\tr2, r1, r1\n\tsstore\tr5, r1\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_mint:\n.func_begin2:\n\tnop\tstack+=[1]\n\tand!\t@CPI2_0[0], r1, r5\n\tjump.eq\t@.BB2_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.ge\t@.BB2_3\n\tadd\t@CPI2_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI2_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI2_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_5\n\tret\n.BB2_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_3[0], r0, r2\n\tsub.s!\t@CPI2_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string_2477:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2490:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\n__farcall:\n.func_begin18:\n.tmp0:\n\tfar_call\tr1, r2, @.BB18_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n__staticcall:\n.func_begin19:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB19_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_3:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551552\nCPI0_2:\n\t.cell 37268881299531377649378311592214199222746837931288379161000705842501249925120\nCPI0_3:\n\t.cell 18446744073709551551\nCPI0_4:\n\t.cell 37231581095703245000337389455147210235654746568116704998009119525672883060736\nCPI0_5:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_6:\nCPI1_2:\nCPI2_5:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI1_3:\nCPI2_7:\nCPI8_2:\nCPI9_2:\nCPI16_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI1_4:\nCPI2_8:\nCPI8_3:\nCPI9_3:\nCPI16_12:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 961581904\nCPI0_11:\n\t.cell 2757214934\nCPI0_12:\n\t.cell 2757214935\nCPI0_13:\n\t.cell 2835717307\nCPI0_14:\n\t.cell 3714247998\nCPI0_15:\n\t.cell 961581905\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 404098524\nCPI0_19:\n\t.cell 404098525\nCPI0_20:\n\t.cell 599290589\nCPI0_21:\n\t.cell 826074471\nCPI0_22:\n\t.cell 117300739\nCPI0_23:\n\t.cell 157198259\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_0:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_1:\n\t.cell -1000000000000000000000000\nCPI2_2:\n\t.cell 1000000000000000000000000\nCPI2_4:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_6:\nCPI13_4:\nCPI15_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_9:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI2_10:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_11:\nCPI15_12:\n\t.cell 7922816251426433759354395033600\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"contracts/ReputationToken.sol\"\nobject \"ReputationToken_2615\" {\n    code {\n        {\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := allocate_memory_array_string_1410()\n            let _1 := 32\n            mstore(add(memPtr, _1), \"ReputationToken\")\n            let memPtr_1 := allocate_memory_array_string()\n            mstore(add(memPtr_1, _1), \"RPT\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1412(extract_byte_array_length(sload(3)), newLen)\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            srcOffset := _1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1413()\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _1) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(3, add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(3, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(memPtr_1)\n            /// @src 9:236:260  \"1000000 * 10**decimals()\"\n            fun_mint(/** @src 9:224:234  \"msg.sender\" */ caller())\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"ReputationToken_2615_deployed\")\n            codecopy(_2, dataoffset(\"ReputationToken_2615_deployed\"), _3)\n            return(_2, _3)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_array_string_1410() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 15)\n        }\n        function allocate_memory_array_string() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 3)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1413() -> data\n        {\n            mstore(0, 3)\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1412(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 3)\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 516 @src 1:8567:9102  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            let _1 := and(/** @src 1:8650:8671  \"account != address(0)\" */ var_account, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n            if /** @src 1:8650:8671  \"account != address(0)\" */ iszero(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _2 := sload(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02)\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            if gt(_2, not(0xd3c21bcecceda1000000))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            let _3 := 0xd3c21bcecceda1000000\n            sstore(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ add(_2, _3))\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1)\n            mstore(0x20, /** @src -1:-1:-1 */ 0)\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40)\n            sstore(dataSlot, add(sload(/** @src 1:8946:8974  \"_balances[account] += amount\" */ dataSlot), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _3))\n            /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ mload(0x40)\n            mstore(_4, _3)\n            /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n            log3(_4, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x20, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"contracts/ReputationToken.sol\"\n    object \"ReputationToken_2615_deployed\" {\n        code {\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2477()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4048() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2477() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4048()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2490(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2491(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var_ := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x24)\n                }\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ add(_1, var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2491(var_to)\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 9:122:270  \"contract ReputationToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 9:122:270  \"contract ReputationToken is ERC20 {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212208ea9fee1fcaf2eedb9b80b997dc2cd4871da788a078e32e4e0339f4d322cec796c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"010001ff4da9e8576fd38b6fb7dc27fb1764ffc21b0a9fd89e00ee9685515a24","factoryDependencies":{}}},"contracts/TestErc20Token.sol":{"TestERC20":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestErc20Token.sol\":\"TestERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/TestErc20Token.sol\":{\"keccak256\":\"0x988c1fdf4c7b33547582f29eca46fff8d78be1a8001614e1e134148547a9f162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c18875d98e39cbb884a41de83fec1ba76f37346c16e6e95501f9cef1c78c701e\",\"dweb:/ipfs/QmTb9vVaqtqXKdUfmzXWC6CsKKYEGKc8HoPRn9DvqQC7Sp\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":128,"contract":"contracts/TestErc20Token.sol:TestERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"contracts/TestErc20Token.sol:TestERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"contracts/TestErc20Token.sol:TestERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"contracts/TestErc20Token.sol:TestERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"contracts/TestErc20Token.sol:TestERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"TestErc20Token.sol:TestERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_35\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_26[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_1[0], r6, r1\n\tjump.ge\t@.BB0_4\n\tadd\t64, r6, r1\n\tst.1\t64, r1\n\tadd\t9, r0, r1\n\tst.1.inc\tr6, r1, r8\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\tr8, r1\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t6, r0, r1\n\tst.1\tr4, r1\n\tld.1\tr6, r7\n\tsub.s!\t@CPI0_5[0], r7, r1\n\tjump.le\t@.BB0_7\n.BB0_4:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_35:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_57\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_26[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_50\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_52\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_64\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_66\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2800, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tadd\t3, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_9\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_42:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_26[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2786, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_mint.2, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_59:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_50:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_52:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_26[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_64:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_66:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_14\n\tadd\tr3, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tadd\tr7, r0, stack-[4]\n\tadd\tr6, r0, stack-[5]\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB0_14\n.BB0_13:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB0_23\n\tadd\tr7, r0, stack-[4]\n\tadd\tr6, r0, stack-[5]\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r8\n\tand!\tr8, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r7\n\tjump.eq\t@.BB0_20\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_19:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tsub!\tr3, r8, r3\n\tjump.ge\t@.BB0_22\n\tshl.s\t3, r8, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_22:\n\tadd\t1, r0, r1\n\tshl.s\t1, r8, r2\n\tadd\tstack-[6], r0, r4\n\tadd\tr6, r0, r5\n\tjump\t@.BB0_15\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tsub.s!\t0, r7, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_25\n\tld.1\tr8, r1\n.BB0_25:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r7, r1\n.BB0_15:\n\tor\tr2, r1, r1\n\tsstore\tr5, r1\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_mint:\n.func_begin2:\n\tnop\tstack+=[1]\n\tand!\t@CPI2_0[0], r1, r5\n\tjump.eq\t@.BB2_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.ge\t@.BB2_3\n\tadd\t@CPI2_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI2_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI2_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_5\n\tret\n.BB2_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_3[0], r0, r2\n\tsub.s!\t@CPI2_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string_2786:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2800:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_mint.2:\n.func_begin18:\n\tnop\tstack+=[2]\n\tand!\t@CPI18_0[0], r1, r5\n\tjump.eq\t@.BB18_1\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t1, r0, r1\n\txor\tr2, r1, r4\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB18_3\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r2, r3\n\tsstore\tr1, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_4[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_5\n\tret\n.BB18_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tadd\t@CPI18_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\n__farcall:\n.func_begin19:\n.tmp0:\n\tfar_call\tr1, r2, @.BB19_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n__staticcall:\n.func_begin20:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB20_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB20_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end20:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_3:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\nCPI18_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551552\nCPI0_2:\n\t.cell 38173527670034292151869438920962746507788947383166477710419347545413895847936\nCPI0_3:\n\t.cell 18446744073709551551\nCPI0_4:\n\t.cell 38116759483266309305539626683599459702722876053926669665888348662489656852480\nCPI0_5:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_6:\nCPI1_2:\nCPI2_5:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\nCPI18_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI1_3:\nCPI2_7:\nCPI8_2:\nCPI9_2:\nCPI16_11:\nCPI18_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI1_4:\nCPI2_8:\nCPI8_3:\nCPI9_3:\nCPI16_12:\nCPI18_6:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 1086394136\nCPI0_11:\n\t.cell 2757214934\nCPI0_12:\n\t.cell 2757214935\nCPI0_13:\n\t.cell 2835717307\nCPI0_14:\n\t.cell 3714247998\nCPI0_15:\n\t.cell 1086394137\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 599290588\nCPI0_19:\n\t.cell 599290589\nCPI0_20:\n\t.cell 826074471\nCPI0_21:\n\t.cell 961581905\nCPI0_22:\n\t.cell 117300739\nCPI0_23:\n\t.cell 157198259\nCPI0_24:\n\t.cell 404098525\nCPI0_25:\n\t.cell 2535301200456458802993406410752\nCPI0_26:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_0:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\nCPI18_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_1:\n\t.cell -1000000000000000000000000\nCPI2_2:\n\t.cell 1000000000000000000000000\nCPI2_4:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\nCPI18_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_6:\nCPI13_4:\nCPI15_13:\nCPI18_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_9:\nCPI18_7:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI2_10:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\nCPI18_8:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_11:\nCPI15_12:\nCPI18_9:\n\t.cell 7922816251426433759354395033600\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"contracts/TestErc20Token.sol\"\nobject \"TestERC20_2653\" {\n    code {\n        {\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := allocate_memory_array_string_1410()\n            let _1 := 32\n            mstore(add(memPtr, _1), \"TestErc20\")\n            let memPtr_1 := allocate_memory_array_string()\n            mstore(add(memPtr_1, _1), \"TERC20\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1412(extract_byte_array_length(sload(/** @src 1:2042:2055  \"_name = name_\" */ 0x03)), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ newLen)\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            srcOffset := _1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1413()\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _1) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(memPtr_1)\n            /// @src 10:227:251  \"1000000 * 10**decimals()\"\n            fun_mint(/** @src 10:215:225  \"msg.sender\" */ caller())\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"TestERC20_2653_deployed\")\n            codecopy(_2, dataoffset(\"TestERC20_2653_deployed\"), _3)\n            return(_2, _3)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_array_string_1410() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 9)\n        }\n        function allocate_memory_array_string() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 6)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1413() -> data\n        {\n            mstore(0, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1412(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 516 @src 1:8567:9102  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            let _1 := and(/** @src 1:8650:8671  \"account != address(0)\" */ var_account, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sub(shl(160, 1), 1))\n            if /** @src 1:8650:8671  \"account != address(0)\" */ iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _2 := sload(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02)\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            if gt(_2, not(0xd3c21bcecceda1000000))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            let _3 := 0xd3c21bcecceda1000000\n            sstore(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ add(_2, _3))\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1)\n            mstore(0x20, /** @src -1:-1:-1 */ 0)\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40)\n            sstore(dataSlot, add(sload(/** @src 1:8946:8974  \"_balances[account] += amount\" */ dataSlot), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _3))\n            /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ mload(0x40)\n            mstore(_4, _3)\n            /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n            log3(_4, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x20, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"contracts/TestErc20Token.sol\"\n    object \"TestERC20_2653_deployed\" {\n        code {\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2786()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 10:334:340  \"amount\"\n                        fun_mint(param_7, param_8)\n                        /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_9, param_10)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_11, param_12)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2800(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ param_13), param_14))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage_4498() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2786() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4498()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2800(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2801(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var_ := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                sum := add(x, y)\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, checked_add_uint256(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender)), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2801(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2801(var_from), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2801(var_to)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2800(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n            /// @ast-id 516 @src 1:8567:9102  \"function _mint(address account, uint256 amount) internal virtual {...\"\n            function fun_mint(var_account, var_amount)\n            {\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                if /** @src 1:8650:8671  \"account != address(0)\" */ iszero(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ and(/** @src 1:8650:8671  \"account != address(0)\" */ var_account, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ sload(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 1:8946:8964  \"_balances[account]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address_2801(var_account)\n                /// @src 10:122:350  \"contract TestERC20 is ERC20 {...\"\n                sstore(_1, add(sload(/** @src 1:8946:8974  \"_balances[account] += amount\" */ _1), /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ var_amount))\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ mload(64)\n                mstore(_2, var_amount)\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 10:122:350  \"contract TestERC20 is ERC20 {...\" */ 32, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8669:8670  \"0\" */ 0x00, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ var_account)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212200d8d7583bd354f923eab595af16e53abcfc17260188587522585a4aaf0dbd9f46c6578706572696d656e74616cf564736f6c634300080a0041\"\n    }\n}\n","hash":"010002170dbe4ed9594f50357548606346176cf31f9f15b1269c17b29619cf2b","factoryDependencies":{}}}}}}